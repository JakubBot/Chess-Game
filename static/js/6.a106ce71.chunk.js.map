{"version":3,"sources":["components/utils/index.js","components/utils/gameUtils/commonGameUtils.js","components/utils/gameUtils/onlineGameUtils.js","redux/actions/boardActions.js","components/common/Game/GameBoard.js","components/common/Game/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/ConfigBoard/ConfigForm.js","components/ConfigBoard/index.js","containers/HomePage/index.js"],"names":["generateID","number","text","possible","i","charAt","Math","floor","random","length","$","window","jQuery","removeDotSquares","removeClass","dotSquare","square","addClass","allowMove","turn","piece","search","makeDots","game","moves","verbose","to","statusText","playerNum","isMyTurn","draw","check","checkmate","repetition","insufficientMaterial","stalemate","move","winLoseStatus","timeLeft","blackTime","whiteTime","figurePlayer","token","p1_token","p2_token","domain","location","origin","process","setTimeLeft","gameEngine","id","chessRef","firestore","collection","doc","update","firebase","FieldValue","increment","changeBoard","board","type","types","CHANGE_BOARD","changePiece","CHANGE_PIECE","changeMode","mode","CHANGE_MODE","updateMoves","UPDATE_MOVES","updateStatusText","STATUS_TEXT","defaultBoardSettings","DEFAULT_BOARD_SETTINGS","GameBoard","songRef","links","adress","userName","points","removeLink","isGameEnded","onBackToPlay","className","onClick","target","rel","href","secondPlayer","role","tabIndex","ref","src","propTypes","PropTypes","oneOfType","func","shape","current","instanceOf","Element","bool","string","isGameActive","changeSite","updateLocalStorage","Game","useEffect","localStorageUser","localStorage","getItem","status","JSON","parse","firstPlayer","convertTime","time","minutes","seconds","css","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ConfigForm","createGame","name","history","isRequired","withRouter","props","activeButton","newGame","moveIndex","add","then","push","catch","err","mapDispatchToProps","boardActions","loginUserWithSocials","userActions","loginUserWithForm","connect","state","boardInfo","user","useAuthState","auth","authUser","updateConfig","config","pieceTheme","position","chessBoard","Chessboard","$board","squares","resize"],"mappings":"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","file":"static/js/6.a106ce71.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const convertTime = (_seconds) => {\n  const minutes = Math.floor(_seconds / 60);\n\n  const seconds = _seconds - minutes * 60;\n  if (seconds > 9) return `${minutes}: ${seconds}`;\n  return `${minutes}: 0${seconds}`;\n};\n\nexport const generateID = (number = 28) => {\n  let text = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < number; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n\n// const [timer, setTimer] = useState(12);\n// useEffect(() => {\n//   const interval = setInterval(() => {\n//     if (timer > 0) setTimer((timer) => timer - 1);\n//     else clearInterval(interval);\n//   }, 1000);\n\n//   return () => clearInterval(interval);\n// }, [timer]);\n","const $ = window.jQuery;\n\nexport function removeDotSquares() {\n  $('#board .square-55d63').removeClass('square');\n}\n\nexport function dotSquare(square) {\n  const $square = $(`#board .square-${square}`);\n\n  $square.addClass('square');\n}\n\nexport function onMouseoutSquare() {\n  removeDotSquares();\n}\n\nexport function allowMove(turn, piece) {\n  return (\n    !(turn === 'w' && piece.search(/^b/) !== -1) ||\n    (turn === 'b' && piece.search(/^w/) !== -1)\n  );\n}\n\nexport function makeDots(game, square) {\n  const moves = game.moves({\n    square,\n    verbose: true,\n  });\n\n  if (moves.length === 0) return;\n\n  for (let i = 0; i < moves.length; i += 1) {\n    dotSquare(moves[i].to);\n  }\n}\n\nexport function statusText(\n  turn,\n  playerNum,\n  isMyTurn,\n  draw,\n  check,\n  checkmate,\n  repetition,\n  insufficientMaterial,\n  stalemate\n) {\n  const move = turn === 'b' ? 'Black' : 'White';\n  if (stalemate) {\n    return 'Draw by stalemate';\n  }\n  if (repetition) {\n    return `Draw by repetition`;\n  }\n  if (insufficientMaterial) {\n    return 'Draw by insufficient material';\n  }\n  if (draw) {\n    return `Draw position`;\n  }\n  if (checkmate) {\n    return `${move} in checkmate, gameover`;\n  }\n  if (check) {\n    return `${move} in check`;\n  }\n  if (playerNum > 0) {\n    if (isMyTurn) {\n      return 'Your Turn';\n    }\n    return \"Opponent's move\";\n  }\n  return 'View Only';\n}\n\nexport function isMyTurn(playerNum, turn) {\n  return (playerNum === 1 && turn === 'w') || (playerNum === 2 && turn === 'b');\n}\n\nexport function winLoseStatus(playerNum, timeLeft, turn) {\n  if (playerNum === 1) {\n    if (timeLeft.blackTime === 0 || turn === 'b') {\n      return 'You won';\n    }\n    if (timeLeft.whiteTime === 0 || turn === 'w') {\n      return 'You lost';\n    }\n  }\n  if (playerNum === 2) {\n    if (timeLeft.whiteTime === 0 || turn === 'w') {\n      return 'You won';\n    }\n    if (timeLeft.blackTime === 0 || turn === 'b') {\n      return 'You lost';\n    }\n  }\n}\n","import firebase, { firestore } from '../../../firebase-config';\n/* eslint-disable camelcase */\nexport function figurePlayer(token, { p1_token, p2_token }) {\n  if (token === p1_token) {\n    return 1;\n  }\n  if (token === p2_token) {\n    return 2;\n  }\n  return 0;\n}\n\n// export function Turn(playerNum, isMyTurn) {\n//   if (playerNum > 0) {\n//     if (isMyTurn) {\n//       return 'Your Turn';\n//     }\n//     return \"Waiting for opponent's move...\";\n//   }\n//   return 'View Only';\n// }\n\nexport const domain = () => {\n  if (window.location) {\n    return `${window.location.origin}${process.env.PUBLIC_URL}`;\n  }\n  return window.location;\n};\n\nexport function setTimeLeft({ id }, gameEngine) {\n  const chessRef = firestore.collection('games').doc(id);\n\n  if (gameEngine.turn() === 'w') {\n    chessRef.update({\n      'timeLeft.whiteTime': firebase.firestore.FieldValue.increment(-1),\n      // 'timeLeft.whiteTime': timeLeft.whiteTime - 1,\n    });\n  } else {\n    chessRef.update({\n      'timeLeft.blackTime': firebase.firestore.FieldValue.increment(-1),\n    });\n  }\n}\n","import types from './actionTypes';\n\nexport function changeBoard(board) {\n  return { type: types.CHANGE_BOARD, board };\n}\nexport function changePiece(piece) {\n  return { type: types.CHANGE_PIECE, piece };\n}\nexport function changeMode(mode) {\n  return { type: types.CHANGE_MODE, mode };\n}\n\nexport function updateMoves(move) {\n  return { type: types.UPDATE_MOVES, move };\n}\nexport function updateStatusText(statusText) {\n  return { type: types.STATUS_TEXT, statusText };\n}\n\nexport function defaultBoardSettings() {\n  return { type: types.DEFAULT_BOARD_SETTINGS };\n}\n\n// setState({\n//   ...state,\n//   board: target.name,\n// });\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst GameBoard = ({\n  songRef,\n  links,\n  adress,\n  userName,\n  points,\n  whiteTime,\n  blackTime,\n  playerNum,\n  removeLink,\n  isGameEnded,\n  onBackToPlay,\n}) => {\n  return (\n    <>\n      <div className=\"game\">\n        {isGameEnded && (\n          <button type=\"button\" className=\"backToPlay\" onClick={onBackToPlay}>\n            <span className=\"backToPlay__arrow\">🠔</span>\n            Back to Play\n          </button>\n        )}\n\n        <div className=\"userInformations\">\n          <div className=\"userWrapper\">\n            <span className=\"playerName\">{userName ?? 'Guest 120'}</span>\n            <span className=\"points\">(500)</span>\n          </div>\n          <div className=\"timer\">\n            {playerNum === 1\n              ? blackTime\n              : playerNum === 2\n              ? whiteTime\n              : '5: 00'}\n          </div>\n        </div>\n        <div id=\"board\" className=\"board\" />\n        <div className=\"userInformations\">\n          <div className=\"userWrapper\">\n            <span className=\"playerName\">{userName ?? 'Guest 152'}</span>\n            <span className=\"points\">{`(${points ?? 500})`}</span>\n          </div>\n          <div className=\"timer\">\n            {playerNum === 1\n              ? whiteTime\n              : playerNum === 2\n              ? blackTime\n              : '5: 00'}\n          </div>\n        </div>\n        {links === true && (\n          <div className=\"links\">\n            <h3 className=\"links__header\">Second player Link</h3>\n            <div className=\"links__link\">\n              <a target=\"_blank\" rel=\"noreferrer\" href={adress.secondPlayer}>\n                {adress.secondPlayer}\n              </a>\n            </div>\n            <div\n              className=\"closeButton\"\n              role=\"button\"\n              tabIndex={0}\n              onClick={removeLink}\n            >\n              X\n            </div>\n          </div>\n        )}\n      </div>\n\n      <audio id=\"myAudio\" ref={songRef}>\n        <source\n          src=\"https://images.chesscomfiles.com/chess-themes/sounds/_WEBM_/default/game-start.webm\"\n          type=\"audio/webm\"\n        />\n        <source\n          src=\"https://images.chesscomfiles.com/chess-themes/sounds/_OGG_/default/game-start.ogg\"\n          type=\"audio/ogg\"\n        />\n        <source\n          src=\"https://images.chesscomfiles.com/chess-themes/sounds/_MP3_/default/game-start.mp3\"\n          type=\"audio/mpeg\"\n        />\n        <source\n          src=\"https://images.chesscomfiles.com/chess-themes/sounds/_WAV_/default/game-start.wav\"\n          type=\"audio/wav\"\n        />\n      </audio>\n    </>\n  );\n};\n\nGameBoard.propTypes = {\n  songRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  links: PropTypes.bool,\n  adress: PropTypes.shape({\n    firstPlayer: PropTypes.string,\n    secondPlayer: PropTypes.string,\n  }),\n  userName: PropTypes.string,\n  points: PropTypes.number,\n  whiteTime: PropTypes.string.isRequired,\n  blackTime: PropTypes.string.isRequired,\n  playerNum: PropTypes.number,\n  isGameEnded: PropTypes.bool,\n  removeLink: PropTypes.func.isRequired,\n  onBackToPlay: PropTypes.func.isRequired,\n};\n\n// songRef, p1_token, p2_token, links, user\nexport default GameBoard;\n","/* eslint-disable camelcase */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { domain } from '../../utils/gameUtils/onlineGameUtils';\nimport { winLoseStatus } from '../../utils/gameUtils/commonGameUtils';\nimport GameBoard from './GameBoard';\n\nconst $ = window.jQuery;\nconst Game = ({\n  songRef,\n  p1_token,\n  p2_token,\n  links,\n  userName,\n  points,\n  timeLeft,\n  playerNum,\n  isGameEnded,\n  changeSite,\n  updateLocalStorage,\n  turn,\n}) => {\n  useEffect(() => {\n    let localStorageUser = localStorage.getItem('user');\n    const status = winLoseStatus(playerNum, timeLeft, turn);\n    if (localStorageUser !== null) {\n      localStorageUser = JSON.parse(localStorageUser);\n      if (isGameEnded && localStorageUser) {\n        status === 'You won'\n          ? updateLocalStorage(localStorageUser?.points + 8)\n          : updateLocalStorage(localStorageUser?.points - 8);\n      }\n    }\n  }, [isGameEnded]);\n  const adress = {\n    firstPlayer: `${domain()}/play/${p1_token}`,\n    secondPlayer: `${domain()}/play/${p2_token}`,\n  };\n\n  const removeLink = () => {\n    $('.links').css('display', 'none');\n  };\n\n  const convertTime = (time = 300) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time - minutes * 60);\n\n    return `${minutes}: ${seconds < 10 ? `0${seconds}` : seconds}`;\n  };\n\n  const onBackToPlay = () => {\n    changeSite('/');\n  };\n\n  return (\n    <>\n      <GameBoard\n        whiteTime={convertTime(timeLeft?.whiteTime)}\n        blackTime={convertTime(timeLeft?.blackTime)}\n        playerNum={playerNum}\n        adress={adress}\n        removeLink={removeLink}\n        songRef={songRef}\n        links={links}\n        userName={userName}\n        points={points}\n        isGameEnded={isGameEnded}\n        onBackToPlay={onBackToPlay}\n      />\n    </>\n  );\n};\n\nGameBoard.propTypes = {\n  songRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  links: PropTypes.bool,\n  userName: PropTypes.string,\n  points: PropTypes.number,\n  playerNum: PropTypes.number,\n  isGameEnded: PropTypes.bool,\n  p1_token: PropTypes.string,\n  p2_token: PropTypes.string,\n  timeLeft: PropTypes.shape({\n    whiteTime: PropTypes.number,\n    blackTime: PropTypes.number,\n    isGameActive: PropTypes.bool,\n  }),\n  changeSite: PropTypes.func,\n  updateLocalStorage: PropTypes.func,\n  turn: PropTypes.string,\n};\n\nexport default Game;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nconst ConfigForm = ({ changeBoard, changePiece, changeMode, createGame }) => {\n  return (\n    <>\n      <div className=\"configBoard\">\n        <div className=\"configBoard__wrapper\">\n          <div className=\"configBoard__header flex-c\">Play Chess</div>\n          <div className=\"configBoard__config\">\n            <div className=\"configBoard__config__board\">\n              <div className=\"config__header\">Your Board</div>\n              <div className=\"configBoard__options\">\n                <button\n                  type=\"button\"\n                  name=\"wooden\"\n                  className=\"configBoard__options__btn configBoard__options__btn--active board__btn\"\n                  onClick={changeBoard}\n                >\n                  Wooden\n                </button>\n                <button\n                  type=\"button\"\n                  name=\"classic\"\n                  className=\"configBoard__options__btn board__btn\"\n                  onClick={changeBoard}\n                >\n                  Classic\n                </button>\n              </div>\n            </div>\n            <div className=\"configBoard__config__pieces\">\n              <div className=\"config__header\">Your Pieces</div>\n              <div className=\"configBoard__options\">\n                <button\n                  type=\"button\"\n                  name=\"neo_wood\"\n                  className=\"configBoard__options__btn--small configBoard__options__btn--active piece__btn\"\n                  onClick={changePiece}\n                >\n                  Neo wood\n                </button>\n                <button\n                  type=\"button\"\n                  name=\"alpha\"\n                  className=\"configBoard__options__btn configBoard__options__btn piece__btn\"\n                  onClick={changePiece}\n                >\n                  Alpha\n                </button>\n                <button\n                  name=\"uscf\"\n                  onClick={changePiece}\n                  type=\"button\"\n                  className=\"configBoard__options__btn piece__btn\"\n                >\n                  USCF\n                </button>\n                <button\n                  name=\"classic\"\n                  onClick={changePiece}\n                  type=\"button\"\n                  className=\"configBoard__options__btn piece__btn\"\n                >\n                  Classic\n                </button>\n              </div>\n            </div>\n            <div className=\"mode\">\n              <div className=\"config__header\">Mode</div>\n              <div className=\"configBoard__options\">\n                <button\n                  onClick={changeMode}\n                  type=\"button\"\n                  className=\"configBoard__options__btn--big configBoard__options__btn--active mode__btn\"\n                  name=\"computer\"\n                >\n                  with computer\n                </button>\n                <button\n                  onClick={changeMode}\n                  type=\"button\"\n                  className=\"configBoard__options__btn--big mode__btn\"\n                  name=\"online\"\n                >\n                  with friend\n                </button>\n              </div>\n            </div>\n            <div className=\"findGame flex-c\">\n              <button\n                type=\"button\"\n                className=\"findGame__button\"\n                onClick={createGame}\n              >\n                Find game\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nConfigForm.propTypes = {\n  changeBoard: PropTypes.func.isRequired,\n  changePiece: PropTypes.func.isRequired,\n  changeMode: PropTypes.func.isRequired,\n  createGame: PropTypes.func.isRequired,\n};\nexport default ConfigForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { generateID } from '../utils';\nimport { firestore } from '../../firebase-config';\nimport ConfigForm from './ConfigForm';\n\nconst $ = window.jQuery;\n\nconst ConfigBoard = ({ board, piece, mode, history, ...props }) => {\n  const changeBoard = ({ target }) => {\n    const buttons = $('.board__btn');\n    const activeButton = target;\n    buttons.removeClass('configBoard__options__btn--active');\n    $(activeButton).addClass('configBoard__options__btn--active');\n\n    const board = target.name;\n    props.changeBoard(board);\n  };\n\n  const changePiece = ({ target }) => {\n    const buttons = $('.piece__btn');\n    const activeButton = target;\n    buttons.removeClass('configBoard__options__btn--active');\n    $(activeButton).addClass('configBoard__options__btn--active');\n\n    props.changePiece(target.name);\n  };\n  const changeMode = ({ target }) => {\n    const buttons = $('.mode__btn');\n    const activeButton = target;\n    buttons.removeClass('configBoard__options__btn--active');\n    $(activeButton).addClass('configBoard__options__btn--active');\n    props.changeMode(target.name);\n  };\n  const createGame = () => {\n    const newGame = {\n      p1_token: generateID(8),\n      p2_token: generateID(8),\n      moveIndex: 1,\n      timeLeft: {\n        whiteTime: 3,\n        blackTime: 2,\n      },\n    };\n\n    if (mode === 'online') {\n      const gamesRef = firestore.collection('games');\n      gamesRef\n        .add(newGame)\n        .then(() => history.push(`./play/${newGame.p1_token}`))\n        .catch((err) => {\n          throw err;\n        });\n    } else if (mode === 'computer') {\n      history.push(`./play/computer`);\n    }\n  };\n\n  return (\n    <>\n      <ConfigForm\n        changeBoard={changeBoard}\n        changePiece={changePiece}\n        changeMode={changeMode}\n        createGame={createGame}\n      />\n    </>\n  );\n};\n\nConfigForm.propTypes = {\n  board: PropTypes.string,\n  piece: PropTypes.string,\n  mode: PropTypes.string,\n  history: PropTypes.string,\n  changeBoard: PropTypes.func.isRequired,\n  changePiece: PropTypes.func.isRequired,\n  changeMode: PropTypes.func.isRequired,\n};\n// PropTypes;\nexport default withRouter(ConfigBoard);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Chessboard from '@chrisoakman/chessboardjs/dist/chessboard-1.0.0';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport ConfigBoard from '../../components/ConfigBoard';\nimport * as boardActions from '../../redux/actions/boardActions';\nimport { auth } from '../../firebase-config';\nimport Game from '../../components/common/Game';\nimport * as userActions from '../../redux/actions/userActions';\n\nconst $ = window.jQuery;\nconst HomePage = ({\n  user,\n  board,\n  piece,\n  mode,\n  changeBoard,\n  changePiece,\n  changeMode,\n  defaultBoardSettings,\n  loginUserWithSocials,\n  loginUserWithForm,\n}) => {\n  const [authUser] = useAuthState(auth);\n  useEffect(() => {\n    if (authUser !== null && user === null) {\n      loginUserWithSocials(authUser);\n    }\n    if (authUser === null && user === null) {\n      loginUserWithForm();\n    }\n  }, [authUser]);\n\n  useEffect(() => {\n    updateConfig();\n  }, [board, piece]);\n  useEffect(() => {\n    defaultBoardSettings();\n  }, []);\n  const updateConfig = () => {\n    const config = {\n      pieceTheme: `${process.env.PUBLIC_URL}/img/chesspieces/${piece}/{piece}.png`,\n      position: 'start',\n    };\n\n    const chessBoard = Chessboard('board', config);\n\n    const $board = $('.chessboard-63f37');\n    const squares = $('.square-55d63');\n\n    if (board === 'wooden') {\n      $board.addClass('woodenBoard');\n      squares.addClass('transparent');\n    } else if (board === 'classic') {\n      $board.removeClass('woodenBoard');\n      squares.removeClass('transparent');\n    }\n\n    $(window).resize(chessBoard.resize);\n  };\n  return (\n    <>\n      <div className=\"page__wrapper\">\n        <Game userName={user?.userName} points={user?.points} />\n        <ConfigBoard\n          board={board}\n          piece={piece}\n          mode={mode}\n          changeBoard={changeBoard}\n          changePiece={changePiece}\n          changeMode={changeMode}\n        />\n      </div>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  const { boardInfo } = state;\n  const { user } = state;\n\n  return {\n    board: boardInfo.board,\n    piece: boardInfo.piece,\n    mode: boardInfo.mode,\n    user,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeBoard: boardActions.changeBoard,\n  changePiece: boardActions.changePiece,\n  changeMode: boardActions.changeMode,\n  defaultBoardSettings: boardActions.defaultBoardSettings,\n  loginUserWithSocials: userActions.loginUserWithSocials,\n  loginUserWithForm: userActions.loginUserWithForm,\n};\n\nHomePage.propTypes = {\n  user: PropTypes.shape({\n    userName: PropTypes.string,\n    photo: PropTypes.string,\n    uid: PropTypes.string,\n    points: PropTypes.number,\n  }),\n  board: PropTypes.string.isRequired,\n  piece: PropTypes.string.isRequired,\n  mode: PropTypes.string.isRequired,\n  changeBoard: PropTypes.func.isRequired,\n  changePiece: PropTypes.func.isRequired,\n  changeMode: PropTypes.func.isRequired,\n  defaultBoardSettings: PropTypes.func.isRequired,\n  loginUserWithSocials: PropTypes.func.isRequired,\n  loginUserWithForm: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"],"sourceRoot":""}