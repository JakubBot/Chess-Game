{"version":3,"sources":["components/utils/index.js","components/utils/gameUtils/commonGameUtils.js","components/utils/gameUtils/onlineGameUtils.js","redux/actions/boardActions.js","components/common/Game/GameBoard.js","components/common/Game/index.js","components/ScoreBoard/BoardMoves.js","components/LocalChat/ChatMessage.js","components/LocalChat/ChatMessages.js","components/LocalChat/index.js","components/ScoreBoard/index.js","components/EndGameCard/GameCard.js","components/EndGameCard/index.js"],"names":["generateID","number","text","possible","i","charAt","Math","floor","random","length","$","window","jQuery","removeDotSquares","removeClass","dotSquare","square","addClass","allowMove","turn","piece","search","makeDots","game","moves","verbose","to","statusText","playerNum","isMyTurn","draw","check","checkmate","repetition","insufficientMaterial","stalemate","move","winLoseStatus","timeLeft","blackTime","whiteTime","figurePlayer","token","p1_token","p2_token","domain","location","origin","process","setTimeLeft","gameEngine","id","chessRef","firestore","collection","doc","update","firebase","FieldValue","increment","changeBoard","board","type","types","CHANGE_BOARD","changePiece","CHANGE_PIECE","changeMode","mode","CHANGE_MODE","updateMoves","UPDATE_MOVES","updateStatusText","STATUS_TEXT","defaultBoardSettings","DEFAULT_BOARD_SETTINGS","GameBoard","songRef","links","adress","userName","points","removeLink","isGameEnded","onBackToHome","className","onClick","target","rel","href","secondPlayer","role","tabIndex","ref","src","propTypes","PropTypes","oneOfType","func","shape","current","instanceOf","Element","bool","string","isGameActive","changeSite","updateLocalStorage","Game","useEffect","localStorageUser","localStorage","getItem","status","JSON","parse","console","log","firstPlayer","convertTime","time","minutes","seconds","css","BoardMoves","reverse","map","whiteSan","blackSan","moveIndex","key","ChatMessage","msg","user","uid","message","photoURL","messageClass","alt","ChatMessages","forwardRef","lastMessageRef","messages","formValue","sendMessage","handleChange","loginGoogle","loginFacebook","onSubmit","value","onChange","placeholder","aria-label","EmptyChat","arrayOf","docId","photo","unsubscribe","withRouter","props","useState","setFormValue","useAuthState","auth","useRef","setDocId","setMessages","match","params","forEach","name","where","onSnapshot","querySnapshot","size","docs","data","rest","deleteFirstItem","e","a","preventDefault","then","innerWidth","scrollIntoView","behavior","ScoreBoard","isOnline","defaultIMG","GameCard","isSignedIn","deleteCard","EndGameCard","userRef","get","snapshot"],"mappings":"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","file":"static/js/1.5782c40f.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const convertTime = (_seconds) => {\n  const minutes = Math.floor(_seconds / 60);\n\n  const seconds = _seconds - minutes * 60;\n  if (seconds > 9) return `${minutes}: ${seconds}`;\n  return `${minutes}: 0${seconds}`;\n};\n\nexport const generateID = (number = 28) => {\n  let text = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < number; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n\n// const [timer, setTimer] = useState(12);\n// useEffect(() => {\n//   const interval = setInterval(() => {\n//     if (timer > 0) setTimer((timer) => timer - 1);\n//     else clearInterval(interval);\n//   }, 1000);\n\n//   return () => clearInterval(interval);\n// }, [timer]);\n","const $ = window.jQuery;\n\nexport function removeDotSquares() {\n  $('#board .square-55d63').removeClass('square');\n}\n\nexport function dotSquare(square) {\n  const $square = $(`#board .square-${square}`);\n\n  $square.addClass('square');\n}\n\nexport function onMouseoutSquare() {\n  removeDotSquares();\n}\n\nexport function allowMove(turn, piece) {\n  return (\n    !(turn === 'w' && piece.search(/^b/) !== -1) ||\n    (turn === 'b' && piece.search(/^w/) !== -1)\n  );\n}\n\nexport function makeDots(game, square) {\n  const moves = game.moves({\n    square,\n    verbose: true,\n  });\n\n  if (moves.length === 0) return;\n\n  for (let i = 0; i < moves.length; i += 1) {\n    dotSquare(moves[i].to);\n  }\n}\n\nexport function statusText(\n  turn,\n  playerNum,\n  isMyTurn,\n  draw,\n  check,\n  checkmate,\n  repetition,\n  insufficientMaterial,\n  stalemate\n) {\n  const move = turn === 'b' ? 'Black' : 'White';\n  if (stalemate) {\n    return 'Draw by stalemate';\n  }\n  if (repetition) {\n    return `Draw by repetition`;\n  }\n  if (insufficientMaterial) {\n    return 'Draw by insufficient material';\n  }\n  if (draw) {\n    return `Draw position`;\n  }\n  if (checkmate) {\n    return `${move} in checkmate, gameover`;\n  }\n  if (check) {\n    return `${move} in check`;\n  }\n  if (playerNum > 0) {\n    if (isMyTurn) {\n      return 'Your Turn';\n    }\n    return \"Opponent's move\";\n  }\n  return 'View Only';\n}\n\nexport function isMyTurn(playerNum, turn) {\n  return (playerNum === 1 && turn === 'w') || (playerNum === 2 && turn === 'b');\n}\n\nexport function winLoseStatus(playerNum, timeLeft, turn) {\n  if (playerNum === 1) {\n    if (timeLeft.blackTime === 0 || turn === 'b') {\n      return 'You won';\n    }\n    if (timeLeft.whiteTime === 0 || turn === 'w') {\n      return 'You lost';\n    }\n  }\n  if (playerNum === 2) {\n    if (timeLeft.whiteTime === 0 || turn === 'w') {\n      return 'You won';\n    }\n    if (timeLeft.blackTime === 0 || turn === 'b') {\n      return 'You lost';\n    }\n  }\n}\n","import firebase, { firestore } from '../../../firebase-config';\n/* eslint-disable camelcase */\nexport function figurePlayer(token, { p1_token, p2_token }) {\n  if (token === p1_token) {\n    return 1;\n  }\n  if (token === p2_token) {\n    return 2;\n  }\n  return 0;\n}\n\n// export function Turn(playerNum, isMyTurn) {\n//   if (playerNum > 0) {\n//     if (isMyTurn) {\n//       return 'Your Turn';\n//     }\n//     return \"Waiting for opponent's move...\";\n//   }\n//   return 'View Only';\n// }\n\nexport const domain = () => {\n  if (window.location) {\n    return `${window.location.origin}${process.env.PUBLIC_URL}`;\n  }\n  return window.location;\n};\n\nexport function setTimeLeft({ id }, gameEngine) {\n  const chessRef = firestore.collection('games').doc(id);\n\n  if (gameEngine.turn() === 'w') {\n    chessRef.update({\n      'timeLeft.whiteTime': firebase.firestore.FieldValue.increment(-1),\n      // 'timeLeft.whiteTime': timeLeft.whiteTime - 1,\n    });\n  } else {\n    chessRef.update({\n      'timeLeft.blackTime': firebase.firestore.FieldValue.increment(-1),\n    });\n  }\n}\n","import types from './actionTypes';\n\nexport function changeBoard(board) {\n  return { type: types.CHANGE_BOARD, board };\n}\nexport function changePiece(piece) {\n  return { type: types.CHANGE_PIECE, piece };\n}\nexport function changeMode(mode) {\n  return { type: types.CHANGE_MODE, mode };\n}\n\nexport function updateMoves(move) {\n  return { type: types.UPDATE_MOVES, move };\n}\nexport function updateStatusText(statusText) {\n  return { type: types.STATUS_TEXT, statusText };\n}\n\nexport function defaultBoardSettings() {\n  return { type: types.DEFAULT_BOARD_SETTINGS };\n}\n\n// setState({\n//   ...state,\n//   board: target.name,\n// });\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst GameBoard = ({\n  songRef,\n  links,\n  adress,\n  userName,\n  points,\n  mode,\n  whiteTime,\n  blackTime,\n  playerNum,\n  removeLink,\n  isGameEnded,\n  onBackToHome,\n}) => {\n  return (\n    <>\n      <div className=\"game\">\n        {isGameEnded && (\n          <button type=\"button\" className=\"backToHome\" onClick={onBackToHome}>\n            Back to Home\n          </button>\n        )}\n\n        <div className=\"userInformations\">\n          <div className=\"userWrapper\">\n            <span className=\"playerName\">\n              {mode === 'online' || playerNum === 2 ? 'Friend' : 'Guest 120'}\n            </span>\n            <span className=\"points\">(500)</span>\n          </div>\n          <div className=\"timer\">\n            {playerNum === 1\n              ? blackTime\n              : playerNum === 2\n              ? whiteTime\n              : '5: 00'}\n          </div>\n        </div>\n        <div id=\"board\" className=\"board\" />\n        <div className=\"userInformations\">\n          <div className=\"userWrapper\">\n            <span className=\"playerName\">{userName ?? 'Guest 152'}</span>\n            <span className=\"points\">{`(${points ?? 500})`}</span>\n          </div>\n          <div className=\"timer\">\n            {playerNum === 1\n              ? whiteTime\n              : playerNum === 2\n              ? blackTime\n              : '5: 00'}\n          </div>\n        </div>\n        {links === true && (\n          <div className=\"links\">\n            <h3 className=\"links__header\">Second player Link</h3>\n            <div className=\"links__link\">\n              <a target=\"_blank\" rel=\"noreferrer\" href={adress.secondPlayer}>\n                {adress.secondPlayer}\n              </a>\n            </div>\n            <div\n              className=\"closeButton\"\n              role=\"button\"\n              tabIndex={0}\n              onClick={removeLink}\n            >\n              X\n            </div>\n          </div>\n        )}\n      </div>\n\n      <audio id=\"myAudio\" ref={songRef}>\n        <source\n          src=\"https://images.chesscomfiles.com/chess-themes/sounds/_WEBM_/default/game-start.webm\"\n          type=\"audio/webm\"\n        />\n        <source\n          src=\"https://images.chesscomfiles.com/chess-themes/sounds/_OGG_/default/game-start.ogg\"\n          type=\"audio/ogg\"\n        />\n        <source\n          src=\"https://images.chesscomfiles.com/chess-themes/sounds/_MP3_/default/game-start.mp3\"\n          type=\"audio/mpeg\"\n        />\n        <source\n          src=\"https://images.chesscomfiles.com/chess-themes/sounds/_WAV_/default/game-start.wav\"\n          type=\"audio/wav\"\n        />\n      </audio>\n    </>\n  );\n};\n\nGameBoard.propTypes = {\n  songRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  links: PropTypes.bool,\n  adress: PropTypes.shape({\n    firstPlayer: PropTypes.string,\n    secondPlayer: PropTypes.string,\n  }),\n  userName: PropTypes.string,\n  points: PropTypes.number,\n  whiteTime: PropTypes.string.isRequired,\n  blackTime: PropTypes.string.isRequired,\n  playerNum: PropTypes.number,\n  isGameEnded: PropTypes.bool,\n  removeLink: PropTypes.func.isRequired,\n  onBackToHome: PropTypes.func.isRequired,\n};\n\n// songRef, p1_token, p2_token, links, user\nexport default GameBoard;\n","/* eslint-disable camelcase */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { domain } from '../../utils/gameUtils/onlineGameUtils';\nimport { winLoseStatus } from '../../utils/gameUtils/commonGameUtils';\nimport GameBoard from './GameBoard';\n\nconst $ = window.jQuery;\nconst Game = ({\n  songRef,\n  p1_token,\n  p2_token,\n  links,\n  mode,\n  userName,\n  points,\n  timeLeft,\n  playerNum,\n  isGameEnded,\n  changeSite,\n  updateLocalStorage,\n  turn,\n}) => {\n  useEffect(() => {\n    let localStorageUser = localStorage.getItem('user');\n    const status = winLoseStatus(playerNum, timeLeft, turn);\n    if (localStorageUser !== null) {\n      localStorageUser = JSON.parse(localStorageUser);\n      if (isGameEnded && localStorageUser) {\n        status === 'You won'\n          ? updateLocalStorage(localStorageUser?.points + 8)\n          : updateLocalStorage(localStorageUser?.points - 8);\n      }\n    }\n  }, [isGameEnded]);\n  console.log(domain());\n  const adress = {\n    firstPlayer: `${domain()}/play/online/${p1_token}`,\n    secondPlayer: `${domain()}/play/online/${p2_token}`,\n  };\n\n  const removeLink = () => {\n    $('.links').css('display', 'none');\n  };\n\n  const convertTime = (time = 300) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time - minutes * 60);\n\n    return `${minutes}: ${seconds < 10 ? `0${seconds}` : seconds}`;\n  };\n\n  const handleBackToHome = () => {\n    changeSite('/');\n  };\n\n  return (\n    <>\n      <GameBoard\n        whiteTime={convertTime(timeLeft?.whiteTime)}\n        blackTime={convertTime(timeLeft?.blackTime)}\n        playerNum={playerNum}\n        adress={adress}\n        removeLink={removeLink}\n        songRef={songRef}\n        links={links}\n        userName={userName}\n        points={points}\n        isGameEnded={isGameEnded}\n        onBackToHome={handleBackToHome}\n        mode={mode}\n      />\n    </>\n  );\n};\n\nGameBoard.propTypes = {\n  songRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  links: PropTypes.bool,\n  userName: PropTypes.string,\n  points: PropTypes.number,\n  mode: PropTypes.string,\n  playerNum: PropTypes.number,\n  isGameEnded: PropTypes.bool,\n  p1_token: PropTypes.string,\n  p2_token: PropTypes.string,\n  timeLeft: PropTypes.shape({\n    whiteTime: PropTypes.number,\n    blackTime: PropTypes.number,\n    isGameActive: PropTypes.bool,\n  }),\n  changeSite: PropTypes.func,\n  updateLocalStorage: PropTypes.func,\n  turn: PropTypes.string,\n};\n\nexport default Game;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './BoardMoves.scss';\n\nconst BoardMoves = ({ moves }) => {\n  return (\n    <>\n      <ul className=\"moves\">\n        {[...moves].reverse().map((move) => {\n          const { whiteSan, blackSan, moveIndex } = move;\n          return (\n            <li className=\"moves__item\" key={move.id}>\n              <span className=\"index\">{moveIndex}</span>\n              <span className=\"san\">{whiteSan}</span>\n              <span className=\"san\">{blackSan}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nBoardMoves.propTypes = {\n  moves: PropTypes.arrayOf(\n    PropTypes.shape({\n      blackSan: PropTypes.string,\n      whiteSan: PropTypes.string,\n      id: PropTypes.string,\n      index: PropTypes.number,\n    })\n  ),\n};\nexport default BoardMoves;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ChatMessage = ({ msg, user }) => {\n  const { uid, message, photoURL } = msg;\n  const userUID = user.uid;\n\n  const messageClass = uid === userUID ? 'sent' : 'received';\n  return (\n    <>\n      <div className=\"message\">\n        <div className={`message ${messageClass}`}>\n          <div className={`userMessage ${messageClass}`}>{message}</div>\n          <img src={photoURL} alt=\"userPhoto\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nChatMessage.propTypes = {\n  msg: PropTypes.arrayOf(\n    PropTypes.shape({\n      docId: PropTypes.string,\n      message: PropTypes.string,\n      photoURL: PropTypes.string,\n      uid: PropTypes.string,\n    })\n  ),\n  user: PropTypes.shape({\n    userName: PropTypes.string,\n    photo: PropTypes.string,\n    uid: PropTypes.string,\n    points: PropTypes.number,\n  }),\n};\n\nexport default ChatMessage;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport ChatMessage from './ChatMessage';\nimport EmptyChat from '../EmptyChat';\nimport './index.scss';\n\nconst ChatMessages = forwardRef(\n  (\n    {\n      messages,\n      user,\n      formValue,\n      sendMessage,\n      handleChange,\n      loginGoogle,\n      loginFacebook,\n    },\n    lastMessageRef\n  ) => {\n    return (\n      <>\n        <div className=\"scoreBoard__info__chat\">\n          <div className=\"scoreBoard__info__header\">Chat</div>\n          <div className=\"scoreBoard__info__options\">\n            <div className=\"chat\">\n              <div className=\"windowChat\">\n                {messages.map((msg) => {\n                  return (\n                    <ChatMessage\n                      key={msg.id}\n                      user={user}\n                      msg={msg}\n                      uid={msg.uid}\n                    />\n                  );\n                })}\n\n                <span ref={lastMessageRef} />\n              </div>\n              <div className=\"chatMessage\">\n                <form onSubmit={sendMessage}>\n                  <input\n                    type=\"text\"\n                    value={formValue}\n                    onChange={handleChange}\n                    placeholder=\"Aa\"\n                  />\n                  <button type=\"submit\">\n                    <span role=\"img\" aria-label=\"icon\">\n                      🕊️\n                    </span>\n                  </button>\n                </form>\n              </div>\n              {!user && (\n                <EmptyChat\n                  loginGoogle={loginGoogle}\n                  loginFacebook={loginFacebook}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n);\n\nChatMessage.propTypes = {\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      docId: PropTypes.string,\n      message: PropTypes.string,\n      photoURL: PropTypes.string,\n      uid: PropTypes.string,\n    })\n  ),\n  user: PropTypes.shape({\n    userName: PropTypes.string,\n    photo: PropTypes.string,\n    uid: PropTypes.string,\n    points: PropTypes.number,\n  }),\n  formValue: PropTypes.string,\n  sendMessage: PropTypes.func,\n  handleChange: PropTypes.func,\n  loginGoogle: PropTypes.func,\n  loginFacebook: PropTypes.func,\n};\n\nexport default ChatMessages;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { withRouter } from 'react-router-dom';\nimport {\n  firestore,\n  auth,\n  loginGoogle,\n  loginFacebook,\n} from '../../firebase-config';\nimport { generateID } from '../utils';\nimport ChatMessages from './ChatMessages';\n\nlet unsubscribe = null;\nconst LocalChat = (props) => {\n  const [formValue, setFormValue] = useState('');\n  const [user] = useAuthState(auth);\n  const lastMessageRef = useRef(null);\n  const [docId, setDocId] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    ListenForUpdates(props.match.params.token);\n\n    return () => unsubscribe && unsubscribe();\n  }, []);\n\n  function ListenForUpdates(token) {\n    ['p1_token', 'p2_token'].forEach((name) => {\n      const chessRef = firestore.collection('games').where(name, '==', token);\n      unsubscribe = chessRef.onSnapshot((querySnapshot) => {\n        if (querySnapshot.size) {\n          const [data] = querySnapshot.docs.map((doc) => {\n            return {\n              data: doc.data(),\n              id: doc.id,\n            };\n          });\n          const { messages } = data.data;\n          const { id } = data;\n          // its for keep only 14 messages in chat\n          if (messages && messages.length > 14) deleteFirstItem(id, messages);\n          setMessages(messages ?? []);\n          setDocId(id);\n        }\n      });\n    });\n  }\n\n  function deleteFirstItem(docId, messages) {\n    const chessRef = firestore.collection('games').doc(docId);\n    const [, ...rest] = messages;\n    chessRef.update({\n      messages: rest,\n    });\n  }\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (formValue === '' || !user) return;\n    const { uid, photoURL } = user;\n    const chessRef = firestore.collection('games').doc(docId);\n    chessRef\n      .update({\n        messages: [\n          ...messages,\n          {\n            message: formValue,\n            uid,\n            photoURL,\n            id: generateID(6),\n          },\n        ],\n      })\n      .then(() => {\n        setFormValue('');\n        if (window.innerWidth < 1000)\n          lastMessageRef.current.scrollIntoView({ behavior: 'smooth' });\n      });\n  };\n\n  const handleChange = (e) => {\n    setFormValue(e.target.value);\n  };\n\n  return (\n    <>\n      <ChatMessages\n        messages={messages}\n        ref={lastMessageRef}\n        sendMessage={sendMessage}\n        user={user}\n        formValue={formValue}\n        handleChange={handleChange}\n        loginGoogle={loginGoogle}\n        loginFacebook={loginFacebook}\n      />\n    </>\n  );\n};\n\nexport default withRouter(LocalChat);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BoardMoves from './BoardMoves';\nimport LocalChat from '../LocalChat';\nimport './index.scss';\n\nconst ScoreBoard = ({ moves, statusText, isOnline }) => {\n  return (\n    <>\n      <div className=\"scoreBoard\">\n        <div className=\"scoreBoard__wrapper\">\n          <div className=\"scoreBoard__header flex-c\">\n            {statusText === '' ? 'Your turn' : statusText}\n          </div>\n          <div className=\"scoreBoard__info\">\n            <div className=\"scoreBoard__info__moves\">\n              <div className=\"scoreBoard__info__header\">Last Moves</div>\n              <div className=\"scoreBoard__info__options\">\n                {moves.length === 0 ? (\n                  <div className=\"dots\">\n                    <span className=\"dot\">.</span>\n                    <span className=\"dot\">.</span>\n                    <span className=\"dot\">.</span>\n                  </div>\n                ) : (\n                  <BoardMoves moves={moves} />\n                )}\n              </div>\n              {isOnline && <LocalChat />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nScoreBoard.propTypes = {\n  moves: PropTypes.arrayOf(\n    PropTypes.shape({\n      blackSan: PropTypes.string,\n      whiteSan: PropTypes.string,\n      id: PropTypes.string,\n      index: PropTypes.number,\n    })\n  ),\n  statusText: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n\nexport default ScoreBoard;\n","import React from 'react';\n\nconst defaultIMG =\n  'https://betacssjs.chesscomfiles.com/bundles/web/images/white_400.09ae248e.png';\n\nconst GameCard = ({\n  status,\n  photo = defaultIMG,\n  points,\n  isSignedIn,\n  deleteCard,\n}) => {\n  return (\n    <>\n      <div\n        className={`endGameCard ${\n          status === 'You won' ? 'greenBackgrond' : 'greyBackground'\n        }`}\n      >\n        <div className=\"endGameCard__close\">\n          <button\n            className=\"endGameCard__close__button\"\n            type=\"button\"\n            onClick={deleteCard}\n          >\n            ✘\n          </button>\n        </div>\n        <div className=\"wrapper\">\n          <h3 className=\"wrapper__header\">{status}</h3>\n          <div className=\"wrapper__images\">\n            <img\n              src={photo}\n              alt=\"userImage\"\n              className={`wrapper__image ${\n                status === 'You won' ? 'win__border' : 'lose__border'\n              }`}\n            />\n            <img\n              src={defaultIMG}\n              alt=\"userImage\"\n              className={`wrapper__image ${\n                status === 'You lost' ? 'win__border' : 'lose__border'\n              }`}\n            />\n          </div>\n          <div className=\"wrapper__rating\">\n            <h3 className=\"wrapper__rating__header\">Rating</h3>\n            <div className=\"wrapper__rating__points\">\n              <span className=\"wrapper__rating__point\">{points}</span>\n              {isSignedIn ? (\n                status === 'You won' ? (\n                  <span className=\"wrapper__rating__win\">+8</span>\n                ) : (\n                  <span className=\"wrapper__rating__lose\">-8</span>\n                )\n              ) : (\n                <span className=\"wrapper__rating__unranked\">Unranked</span>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GameCard;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport GameCard from './GameCard';\nimport firebase, { firestore } from '../../firebase-config';\nimport { winLoseStatus } from '../utils/gameUtils/commonGameUtils';\nimport './index.scss';\n\nconst $ = window.jQuery;\n\nconst EndGameCard = ({ timeLeft, turn, playerNum = 1, user }) => {\n  useEffect(() => {\n    if (!user) return;\n    const userRef = firestore.collection('users').where('uid', '==', user.uid);\n    const status = winLoseStatus(playerNum, timeLeft, turn);\n    userRef.get().then((snapshot) => {\n      if (snapshot.size === 1) {\n        const [user] = snapshot.docs;\n        const { id } = user;\n\n        if (status === 'You won') {\n          firestore\n            .collection('users')\n            .doc(id)\n            .update({\n              points: firebase.firestore.FieldValue.increment(8),\n            });\n        } else {\n          firestore\n            .collection('users')\n            .doc(id)\n            .update({\n              points: firebase.firestore.FieldValue.increment(-8),\n            });\n        }\n      }\n    });\n  }, []);\n\n  const deleteCard = () => {\n    $('.endGameCard').css('display', 'none');\n  };\n\n  return (\n    <>\n      <GameCard\n        deleteCard={deleteCard}\n        status={winLoseStatus(playerNum, timeLeft, turn)}\n        photo={user?.photo}\n        points={user?.points}\n        isSignedIn={user !== null}\n      />\n    </>\n  );\n};\n\nEndGameCard.propTypes = {\n  timeLeft: PropTypes.shape({\n    whiteTime: PropTypes.number.isRequired,\n    blackTime: PropTypes.number.isRequired,\n    isGameActive: PropTypes.bool.isRequired,\n  }),\n  turn: PropTypes.string.isRequired,\n  playerNum: PropTypes.number,\n  user: PropTypes.shape({\n    userName: PropTypes.string,\n    photo: PropTypes.string,\n    uid: PropTypes.string,\n    points: PropTypes.number,\n  }),\n};\n\nexport default EndGameCard;\n"],"sourceRoot":""}