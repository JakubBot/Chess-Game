{"version":3,"sources":["../node_modules/chess.js/chess.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js"],"names":["Chess","fen","DEFAULT_POSITION","POSSIBLE_RESULTS","PAWN_OFFSETS","b","w","PIECE_OFFSETS","n","r","q","k","ATTACKS","RAYS","SHIFTS","p","FLAGS","NORMAL","CAPTURE","BIG_PAWN","EP_CAPTURE","PROMOTION","KSIDE_CASTLE","QSIDE_CASTLE","BITS","SQUARES","a8","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","h1","ROOKS","square","flag","board","Array","kings","turn","castling","ep_square","half_moves","move_number","history","header","comments","clear","keep_headers","update_setup","generate_fen","prune_comments","reversed_history","current_comments","copy_comment","length","push","undo_move","make_move","pop","reset","load","tokens","split","position","validate_fen","valid","i","piece","charAt","indexOf","parseInt","color","put","type","toLowerCase","algebraic","errors","error_number","error","isNaN","test","rows","sum_fields","previous_was_number","empty","toUpperCase","cflags","epflags","join","set_header","args","get","sq","build_move","from","to","flags","promotion","move","captured","generate_moves","options","add_move","moves","rank","pieces","len","us","them","swap_color","second_rank","first_sq","last_sq","single_square","legal","j","offset","castling_to","castling_from","attacked","legal_moves","king_attacked","move_to_san","sloppy","output","disambiguator","ambiguities","same_rank","same_file","ambig_from","ambig_to","ambig_piece","file","get_disambiguator","in_check","in_checkmate","stripped_san","replace","difference","index","blocked","in_stalemate","insufficient_material","bishops","num_pieces","sq_color","sum","in_threefold_repetition","positions","repetition","slice","old","move_from_san","clean_move","matches","match","f","substring","c","make_pretty","ugly_move","clone","obj","dupe","property","san","trim","str","WHITE","BLACK","PAWN","KNIGHT","BISHOP","ROOK","QUEEN","KING","keys","ugly_moves","verbose","in_draw","game_over","row","pgn","newline","newline_char","max_width","result","header_exists","append_comment","move_string","comment","delimiter","Result","strip","wrap_comment","width","token","current_width","includes","load_pgn","mask","header_regex","RegExp","header_string","exec","headers","header_obj","key","value","parse_pgn_header","encode_comment","string","map","charCodeAt","toString","encodeURIComponent","to_hex","decode_comment","startsWith","endsWith","decodeURIComponent","from_hex","ms","bracket","semicolon","undefined","rav_regex","half_move","object","has_keys","arguments","ascii","s","move_obj","pretty_move","undo","remove","perft","depth","nodes","square_color","sq_0x88","move_history","get_comment","set_comment","delete_comment","get_comments","Object","delete_comments","exports","define","unsupportedIterableToArray","module","o","Symbol","iterator","isArray","F","done","e","_e","TypeError","it","err","normalCompletion","didErr","step","next","_e2","arrayLikeToArray","minLen","prototype","call","constructor","name","arr","arr2","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","__await","then","unwrapped","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","apply","_toArray"],"mappings":"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","file":"static/js/2.ffa318d5.chunk.js","sourcesContent":["/*\n * Copyright (c) 2020, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\nvar Chess = function(fen) {\n  var BLACK = 'b'\n  var WHITE = 'w'\n\n  var EMPTY = -1\n\n  var PAWN = 'p'\n  var KNIGHT = 'n'\n  var BISHOP = 'b'\n  var ROOK = 'r'\n  var QUEEN = 'q'\n  var KING = 'k'\n\n  var SYMBOLS = 'pnbrqkPNBRQK'\n\n  var DEFAULT_POSITION =\n    'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\n  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*']\n\n  var PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  }\n\n  var PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1]\n  }\n\n  // prettier-ignore\n  var ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n  ];\n\n  // prettier-ignore\n  var RAYS = [\n     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n  ];\n\n  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 }\n\n  var FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q'\n  }\n\n  var BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n  }\n\n  var RANK_1 = 7\n  var RANK_2 = 6\n  var RANK_3 = 5\n  var RANK_4 = 4\n  var RANK_5 = 3\n  var RANK_6 = 2\n  var RANK_7 = 1\n  var RANK_8 = 0\n\n  // prettier-ignore\n  var SQUARES = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n  };\n\n  var ROOKS = {\n    w: [\n      { square: SQUARES.a1, flag: BITS.QSIDE_CASTLE },\n      { square: SQUARES.h1, flag: BITS.KSIDE_CASTLE }\n    ],\n    b: [\n      { square: SQUARES.a8, flag: BITS.QSIDE_CASTLE },\n      { square: SQUARES.h8, flag: BITS.KSIDE_CASTLE }\n    ]\n  }\n\n  var board = new Array(128)\n  var kings = { w: EMPTY, b: EMPTY }\n  var turn = WHITE\n  var castling = { w: 0, b: 0 }\n  var ep_square = EMPTY\n  var half_moves = 0\n  var move_number = 1\n  var history = []\n  var header = {}\n  var comments = {}\n\n  /* if the user passes in a fen string, load it, else default to\n   * starting position\n   */\n  if (typeof fen === 'undefined') {\n    load(DEFAULT_POSITION)\n  } else {\n    load(fen)\n  }\n\n  function clear(keep_headers) {\n    if (typeof keep_headers === 'undefined') {\n      keep_headers = false\n    }\n\n    board = new Array(128)\n    kings = { w: EMPTY, b: EMPTY }\n    turn = WHITE\n    castling = { w: 0, b: 0 }\n    ep_square = EMPTY\n    half_moves = 0\n    move_number = 1\n    history = []\n    if (!keep_headers) header = {}\n    comments = {}\n    update_setup(generate_fen())\n  }\n\n  function prune_comments() {\n    var reversed_history = [];\n    var current_comments = {};\n    var copy_comment = function(fen) {\n      if (fen in comments) {\n        current_comments[fen] = comments[fen];\n      }\n    };\n    while (history.length > 0) {\n      reversed_history.push(undo_move());\n    }\n    copy_comment(generate_fen());\n    while (reversed_history.length > 0) {\n      make_move(reversed_history.pop());\n      copy_comment(generate_fen());\n    }\n    comments = current_comments;\n  }\n\n  function reset() {\n    load(DEFAULT_POSITION)\n  }\n\n  function load(fen, keep_headers) {\n    if (typeof keep_headers === 'undefined') {\n      keep_headers = false\n    }\n\n    var tokens = fen.split(/\\s+/)\n    var position = tokens[0]\n    var square = 0\n\n    if (!validate_fen(fen).valid) {\n      return false\n    }\n\n    clear(keep_headers)\n\n    for (var i = 0; i < position.length; i++) {\n      var piece = position.charAt(i)\n\n      if (piece === '/') {\n        square += 8\n      } else if (is_digit(piece)) {\n        square += parseInt(piece, 10)\n      } else {\n        var color = piece < 'a' ? WHITE : BLACK\n        put({ type: piece.toLowerCase(), color: color }, algebraic(square))\n        square++\n      }\n    }\n\n    turn = tokens[1]\n\n    if (tokens[2].indexOf('K') > -1) {\n      castling.w |= BITS.KSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      castling.w |= BITS.QSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      castling.b |= BITS.KSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      castling.b |= BITS.QSIDE_CASTLE\n    }\n\n    ep_square = tokens[3] === '-' ? EMPTY : SQUARES[tokens[3]]\n    half_moves = parseInt(tokens[4], 10)\n    move_number = parseInt(tokens[5], 10)\n\n    update_setup(generate_fen())\n\n    return true\n  }\n\n  /* TODO: this function is pretty much crap - it validates structure but\n   * completely ignores content (e.g. doesn't verify that each side has a king)\n   * ... we should rewrite this, and ditch the silly error_number field while\n   * we're at it\n   */\n  function validate_fen(fen) {\n    var errors = {\n      0: 'No errors.',\n      1: 'FEN string must contain six space-delimited fields.',\n      2: '6th field (move number) must be a positive integer.',\n      3: '5th field (half move counter) must be a non-negative integer.',\n      4: '4th field (en-passant square) is invalid.',\n      5: '3rd field (castling availability) is invalid.',\n      6: '2nd field (side to move) is invalid.',\n      7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\n      8: '1st field (piece positions) is invalid [consecutive numbers].',\n      9: '1st field (piece positions) is invalid [invalid piece].',\n      10: '1st field (piece positions) is invalid [row too large].',\n      11: 'Illegal en-passant square'\n    }\n\n    /* 1st criterion: 6 space-seperated fields? */\n    var tokens = fen.split(/\\s+/)\n    if (tokens.length !== 6) {\n      return { valid: false, error_number: 1, error: errors[1] }\n    }\n\n    /* 2nd criterion: move number field is a integer value > 0? */\n    if (isNaN(tokens[5]) || parseInt(tokens[5], 10) <= 0) {\n      return { valid: false, error_number: 2, error: errors[2] }\n    }\n\n    /* 3rd criterion: half move counter is an integer >= 0? */\n    if (isNaN(tokens[4]) || parseInt(tokens[4], 10) < 0) {\n      return { valid: false, error_number: 3, error: errors[3] }\n    }\n\n    /* 4th criterion: 4th field is a valid e.p.-string? */\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return { valid: false, error_number: 4, error: errors[4] }\n    }\n\n    /* 5th criterion: 3th field is a valid castle-string? */\n    if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n      return { valid: false, error_number: 5, error: errors[5] }\n    }\n\n    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return { valid: false, error_number: 6, error: errors[6] }\n    }\n\n    /* 7th criterion: 1st field contains 8 rows? */\n    var rows = tokens[0].split('/')\n    if (rows.length !== 8) {\n      return { valid: false, error_number: 7, error: errors[7] }\n    }\n\n    /* 8th criterion: every row is valid? */\n    for (var i = 0; i < rows.length; i++) {\n      /* check for right sum of fields AND not two numbers in succession */\n      var sum_fields = 0\n      var previous_was_number = false\n\n      for (var k = 0; k < rows[i].length; k++) {\n        if (!isNaN(rows[i][k])) {\n          if (previous_was_number) {\n            return { valid: false, error_number: 8, error: errors[8] }\n          }\n          sum_fields += parseInt(rows[i][k], 10)\n          previous_was_number = true\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return { valid: false, error_number: 9, error: errors[9] }\n          }\n          sum_fields += 1\n          previous_was_number = false\n        }\n      }\n      if (sum_fields !== 8) {\n        return { valid: false, error_number: 10, error: errors[10] }\n      }\n    }\n\n    if (\n      (tokens[3][1] == '3' && tokens[1] == 'w') ||\n      (tokens[3][1] == '6' && tokens[1] == 'b')\n    ) {\n      return { valid: false, error_number: 11, error: errors[11] }\n    }\n\n    /* everything's okay! */\n    return { valid: true, error_number: 0, error: errors[0] }\n  }\n\n  function generate_fen() {\n    var empty = 0\n    var fen = ''\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      if (board[i] == null) {\n        empty++\n      } else {\n        if (empty > 0) {\n          fen += empty\n          empty = 0\n        }\n        var color = board[i].color\n        var piece = board[i].type\n\n        fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty\n        }\n\n        if (i !== SQUARES.h1) {\n          fen += '/'\n        }\n\n        empty = 0\n        i += 8\n      }\n    }\n\n    var cflags = ''\n    if (castling[WHITE] & BITS.KSIDE_CASTLE) {\n      cflags += 'K'\n    }\n    if (castling[WHITE] & BITS.QSIDE_CASTLE) {\n      cflags += 'Q'\n    }\n    if (castling[BLACK] & BITS.KSIDE_CASTLE) {\n      cflags += 'k'\n    }\n    if (castling[BLACK] & BITS.QSIDE_CASTLE) {\n      cflags += 'q'\n    }\n\n    /* do we have an empty castling flag? */\n    cflags = cflags || '-'\n    var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square)\n\n    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ')\n  }\n\n  function set_header(args) {\n    for (var i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n        header[args[i]] = args[i + 1]\n      }\n    }\n    return header\n  }\n\n  /* called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n   * equal to the default position, the SetUp and FEN are deleted\n   * the setup is only updated if history.length is zero, ie moves haven't been\n   * made.\n   */\n  function update_setup(fen) {\n    if (history.length > 0) return\n\n    if (fen !== DEFAULT_POSITION) {\n      header['SetUp'] = '1'\n      header['FEN'] = fen\n    } else {\n      delete header['SetUp']\n      delete header['FEN']\n    }\n  }\n\n  function get(square) {\n    var piece = board[SQUARES[square]]\n    return piece ? { type: piece.type, color: piece.color } : null\n  }\n\n  function put(piece, square) {\n    /* check for valid piece object */\n    if (!('type' in piece && 'color' in piece)) {\n      return false\n    }\n\n    /* check for piece */\n    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n      return false\n    }\n\n    /* check for valid square */\n    if (!(square in SQUARES)) {\n      return false\n    }\n\n    var sq = SQUARES[square]\n\n    /* don't let the user place more than one king */\n    if (\n      piece.type == KING &&\n      !(kings[piece.color] == EMPTY || kings[piece.color] == sq)\n    ) {\n      return false\n    }\n\n    board[sq] = { type: piece.type, color: piece.color }\n    if (piece.type === KING) {\n      kings[piece.color] = sq\n    }\n\n    update_setup(generate_fen())\n\n    return true\n  }\n\n  function remove(square) {\n    var piece = get(square)\n    board[SQUARES[square]] = null\n    if (piece && piece.type === KING) {\n      kings[piece.color] = EMPTY\n    }\n\n    update_setup(generate_fen())\n\n    return piece\n  }\n\n  function build_move(board, from, to, flags, promotion) {\n    var move = {\n      color: turn,\n      from: from,\n      to: to,\n      flags: flags,\n      piece: board[from].type\n    }\n\n    if (promotion) {\n      move.flags |= BITS.PROMOTION\n      move.promotion = promotion\n    }\n\n    if (board[to]) {\n      move.captured = board[to].type\n    } else if (flags & BITS.EP_CAPTURE) {\n      move.captured = PAWN\n    }\n    return move\n  }\n\n  function generate_moves(options) {\n    function add_move(board, moves, from, to, flags) {\n      /* if pawn promotion */\n      if (\n        board[from].type === PAWN &&\n        (rank(to) === RANK_8 || rank(to) === RANK_1)\n      ) {\n        var pieces = [QUEEN, ROOK, BISHOP, KNIGHT]\n        for (var i = 0, len = pieces.length; i < len; i++) {\n          moves.push(build_move(board, from, to, flags, pieces[i]))\n        }\n      } else {\n        moves.push(build_move(board, from, to, flags))\n      }\n    }\n\n    var moves = []\n    var us = turn\n    var them = swap_color(us)\n    var second_rank = { b: RANK_7, w: RANK_2 }\n\n    var first_sq = SQUARES.a8\n    var last_sq = SQUARES.h1\n    var single_square = false\n\n    /* do we want legal moves? */\n    var legal =\n      typeof options !== 'undefined' && 'legal' in options\n        ? options.legal\n        : true\n\n    /* are we generating moves for a single square? */\n    if (typeof options !== 'undefined' && 'square' in options) {\n      if (options.square in SQUARES) {\n        first_sq = last_sq = SQUARES[options.square]\n        single_square = true\n      } else {\n        /* invalid square */\n        return []\n      }\n    }\n\n    for (var i = first_sq; i <= last_sq; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      var piece = board[i]\n      if (piece == null || piece.color !== us) {\n        continue\n      }\n\n      if (piece.type === PAWN) {\n        /* single square, non-capturing */\n        var square = i + PAWN_OFFSETS[us][0]\n        if (board[square] == null) {\n          add_move(board, moves, i, square, BITS.NORMAL)\n\n          /* double square */\n          var square = i + PAWN_OFFSETS[us][1]\n          if (second_rank[us] === rank(i) && board[square] == null) {\n            add_move(board, moves, i, square, BITS.BIG_PAWN)\n          }\n        }\n\n        /* pawn captures */\n        for (j = 2; j < 4; j++) {\n          var square = i + PAWN_OFFSETS[us][j]\n          if (square & 0x88) continue\n\n          if (board[square] != null && board[square].color === them) {\n            add_move(board, moves, i, square, BITS.CAPTURE)\n          } else if (square === ep_square) {\n            add_move(board, moves, i, ep_square, BITS.EP_CAPTURE)\n          }\n        }\n      } else {\n        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n          var offset = PIECE_OFFSETS[piece.type][j]\n          var square = i\n\n          while (true) {\n            square += offset\n            if (square & 0x88) break\n\n            if (board[square] == null) {\n              add_move(board, moves, i, square, BITS.NORMAL)\n            } else {\n              if (board[square].color === us) break\n              add_move(board, moves, i, square, BITS.CAPTURE)\n              break\n            }\n\n            /* break, if knight or king */\n            if (piece.type === 'n' || piece.type === 'k') break\n          }\n        }\n      }\n    }\n\n    /* check for castling if: a) we're generating all moves, or b) we're doing\n     * single square move generation on the king's square\n     */\n    if (!single_square || last_sq === kings[us]) {\n      /* king-side castling */\n      if (castling[us] & BITS.KSIDE_CASTLE) {\n        var castling_from = kings[us]\n        var castling_to = castling_from + 2\n\n        if (\n          board[castling_from + 1] == null &&\n          board[castling_to] == null &&\n          !attacked(them, kings[us]) &&\n          !attacked(them, castling_from + 1) &&\n          !attacked(them, castling_to)\n        ) {\n          add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE)\n        }\n      }\n\n      /* queen-side castling */\n      if (castling[us] & BITS.QSIDE_CASTLE) {\n        var castling_from = kings[us]\n        var castling_to = castling_from - 2\n\n        if (\n          board[castling_from - 1] == null &&\n          board[castling_from - 2] == null &&\n          board[castling_from - 3] == null &&\n          !attacked(them, kings[us]) &&\n          !attacked(them, castling_from - 1) &&\n          !attacked(them, castling_to)\n        ) {\n          add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE)\n        }\n      }\n    }\n\n    /* return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal) {\n      return moves\n    }\n\n    /* filter out illegal moves */\n    var legal_moves = []\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i])\n      if (!king_attacked(us)) {\n        legal_moves.push(moves[i])\n      }\n      undo_move()\n    }\n\n    return legal_moves\n  }\n\n  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n   * disambiguation bugs in Fritz and Chessbase.  See below:\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n  function move_to_san(move, sloppy) {\n    var output = ''\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O'\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O'\n    } else {\n      var disambiguator = get_disambiguator(move, sloppy)\n\n      if (move.piece !== PAWN) {\n        output += move.piece.toUpperCase() + disambiguator\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0]\n        }\n        output += 'x'\n      }\n\n      output += algebraic(move.to)\n\n      if (move.flags & BITS.PROMOTION) {\n        output += '=' + move.promotion.toUpperCase()\n      }\n    }\n\n    make_move(move)\n    if (in_check()) {\n      if (in_checkmate()) {\n        output += '#'\n      } else {\n        output += '+'\n      }\n    }\n    undo_move()\n\n    return output\n  }\n\n  // parses all of the decorators out of a SAN string\n  function stripped_san(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\n  }\n\n  function attacked(color, square) {\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      /* if empty square or wrong color */\n      if (board[i] == null || board[i].color !== color) continue\n\n      var piece = board[i]\n      var difference = i - square\n      var index = difference + 119\n\n      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true\n          } else {\n            if (piece.color === BLACK) return true\n          }\n          continue\n        }\n\n        /* if the piece is a knight or a king */\n        if (piece.type === 'n' || piece.type === 'k') return true\n\n        var offset = RAYS[index]\n        var j = i + offset\n\n        var blocked = false\n        while (j !== square) {\n          if (board[j] != null) {\n            blocked = true\n            break\n          }\n          j += offset\n        }\n\n        if (!blocked) return true\n      }\n    }\n\n    return false\n  }\n\n  function king_attacked(color) {\n    return attacked(swap_color(color), kings[color])\n  }\n\n  function in_check() {\n    return king_attacked(turn)\n  }\n\n  function in_checkmate() {\n    return in_check() && generate_moves().length === 0\n  }\n\n  function in_stalemate() {\n    return !in_check() && generate_moves().length === 0\n  }\n\n  function insufficient_material() {\n    var pieces = {}\n    var bishops = []\n    var num_pieces = 0\n    var sq_color = 0\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      sq_color = (sq_color + 1) % 2\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      var piece = board[i]\n      if (piece) {\n        pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\n        if (piece.type === BISHOP) {\n          bishops.push(sq_color)\n        }\n        num_pieces++\n      }\n    }\n\n    /* k vs. k */\n    if (num_pieces === 2) {\n      return true\n    } else if (\n      /* k vs. kn .... or .... k vs. kb */\n      num_pieces === 3 &&\n      (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\n    ) {\n      return true\n    } else if (num_pieces === pieces[BISHOP] + 2) {\n      /* kb vs. kb where any number of bishops are all on the same color */\n      var sum = 0\n      var len = bishops.length\n      for (var i = 0; i < len; i++) {\n        sum += bishops[i]\n      }\n      if (sum === 0 || sum === len) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  function in_threefold_repetition() {\n    /* TODO: while this function is fine for casual use, a better\n     * implementation would use a Zobrist key (instead of FEN). the\n     * Zobrist key would be maintained in the make_move/undo_move functions,\n     * avoiding the costly that we do below.\n     */\n    var moves = []\n    var positions = {}\n    var repetition = false\n\n    while (true) {\n      var move = undo_move()\n      if (!move) break\n      moves.push(move)\n    }\n\n    while (true) {\n      /* remove the last two fields in the FEN string, they're not needed\n       * when checking for draw by rep */\n      var fen = generate_fen()\n        .split(' ')\n        .slice(0, 4)\n        .join(' ')\n\n      /* has the position occurred three or move times */\n      positions[fen] = fen in positions ? positions[fen] + 1 : 1\n      if (positions[fen] >= 3) {\n        repetition = true\n      }\n\n      if (!moves.length) {\n        break\n      }\n      make_move(moves.pop())\n    }\n\n    return repetition\n  }\n\n  function push(move) {\n    history.push({\n      move: move,\n      kings: { b: kings.b, w: kings.w },\n      turn: turn,\n      castling: { b: castling.b, w: castling.w },\n      ep_square: ep_square,\n      half_moves: half_moves,\n      move_number: move_number\n    })\n  }\n\n  function make_move(move) {\n    var us = turn\n    var them = swap_color(us)\n    push(move)\n\n    board[move.to] = board[move.from]\n    board[move.from] = null\n\n    /* if ep capture, remove the captured pawn */\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (turn === BLACK) {\n        board[move.to - 16] = null\n      } else {\n        board[move.to + 16] = null\n      }\n    }\n\n    /* if pawn promotion, replace with new piece */\n    if (move.flags & BITS.PROMOTION) {\n      board[move.to] = { type: move.promotion, color: us }\n    }\n\n    /* if we moved the king */\n    if (board[move.to].type === KING) {\n      kings[board[move.to].color] = move.to\n\n      /* if we castled, move the rook next to the king */\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        var castling_to = move.to - 1\n        var castling_from = move.to + 1\n        board[castling_to] = board[castling_from]\n        board[castling_from] = null\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        var castling_to = move.to + 1\n        var castling_from = move.to - 2\n        board[castling_to] = board[castling_from]\n        board[castling_from] = null\n      }\n\n      /* turn off castling */\n      castling[us] = ''\n    }\n\n    /* turn off castling if we move a rook */\n    if (castling[us]) {\n      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (\n          move.from === ROOKS[us][i].square &&\n          castling[us] & ROOKS[us][i].flag\n        ) {\n          castling[us] ^= ROOKS[us][i].flag\n          break\n        }\n      }\n    }\n\n    /* turn off castling if we capture a rook */\n    if (castling[them]) {\n      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (\n          move.to === ROOKS[them][i].square &&\n          castling[them] & ROOKS[them][i].flag\n        ) {\n          castling[them] ^= ROOKS[them][i].flag\n          break\n        }\n      }\n    }\n\n    /* if big pawn move, update the en passant square */\n    if (move.flags & BITS.BIG_PAWN) {\n      if (turn === 'b') {\n        ep_square = move.to - 16\n      } else {\n        ep_square = move.to + 16\n      }\n    } else {\n      ep_square = EMPTY\n    }\n\n    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n    if (move.piece === PAWN) {\n      half_moves = 0\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      half_moves = 0\n    } else {\n      half_moves++\n    }\n\n    if (turn === BLACK) {\n      move_number++\n    }\n    turn = swap_color(turn)\n  }\n\n  function undo_move() {\n    var old = history.pop()\n    if (old == null) {\n      return null\n    }\n\n    var move = old.move\n    kings = old.kings\n    turn = old.turn\n    castling = old.castling\n    ep_square = old.ep_square\n    half_moves = old.half_moves\n    move_number = old.move_number\n\n    var us = turn\n    var them = swap_color(turn)\n\n    board[move.from] = board[move.to]\n    board[move.from].type = move.piece // to undo any promotions\n    board[move.to] = null\n\n    if (move.flags & BITS.CAPTURE) {\n      board[move.to] = { type: move.captured, color: them }\n    } else if (move.flags & BITS.EP_CAPTURE) {\n      var index\n      if (us === BLACK) {\n        index = move.to - 16\n      } else {\n        index = move.to + 16\n      }\n      board[index] = { type: PAWN, color: them }\n    }\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      var castling_to, castling_from\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castling_to = move.to + 1\n        castling_from = move.to - 1\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        castling_to = move.to - 2\n        castling_from = move.to + 1\n      }\n\n      board[castling_to] = board[castling_from]\n      board[castling_from] = null\n    }\n\n    return move\n  }\n\n  /* this function is used to uniquely identify ambiguous moves */\n  function get_disambiguator(move, sloppy) {\n    var moves = generate_moves({ legal: !sloppy })\n\n    var from = move.from\n    var to = move.to\n    var piece = move.piece\n\n    var ambiguities = 0\n    var same_rank = 0\n    var same_file = 0\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      var ambig_from = moves[i].from\n      var ambig_to = moves[i].to\n      var ambig_piece = moves[i].piece\n\n      /* if a move of the same piece type ends on the same to square, we'll\n       * need to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n        ambiguities++\n\n        if (rank(from) === rank(ambig_from)) {\n          same_rank++\n        }\n\n        if (file(from) === file(ambig_from)) {\n          same_file++\n        }\n      }\n    }\n\n    if (ambiguities > 0) {\n      /* if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      if (same_rank > 0 && same_file > 0) {\n        return algebraic(from)\n      } else if (same_file > 0) {\n        /* if the moving piece rests on the same file, use the rank symbol as the\n         * disambiguator\n         */\n        return algebraic(from).charAt(1)\n      } else {\n        /* else use the file symbol */\n        return algebraic(from).charAt(0)\n      }\n    }\n\n    return ''\n  }\n\n  function ascii() {\n    var s = '   +------------------------+\\n'\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* display the rank */\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |'\n      }\n\n      /* empty piece */\n      if (board[i] == null) {\n        s += ' . '\n      } else {\n        var piece = board[i].type\n        var color = board[i].color\n        var symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n        s += ' ' + symbol + ' '\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n'\n        i += 8\n      }\n    }\n    s += '   +------------------------+\\n'\n    s += '     a  b  c  d  e  f  g  h\\n'\n\n    return s\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  function move_from_san(move, sloppy) {\n    // strip off any move decorations: e.g Nf3+?!\n    var clean_move = stripped_san(move)\n\n    // if we're using the sloppy parser run a regex to grab piece, to, and from\n    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n    if (sloppy) {\n      var matches = clean_move.match(\n        /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n      )\n      if (matches) {\n        var piece = matches[1]\n        var from = matches[2]\n        var to = matches[3]\n        var promotion = matches[4]\n      }\n    }\n\n    var moves = generate_moves()\n    for (var i = 0, len = moves.length; i < len; i++) {\n      // try the strict parser first, then the sloppy parser if requested\n      // by the user\n      if (\n        clean_move === stripped_san(move_to_san(moves[i])) ||\n        (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))\n      ) {\n        return moves[i]\n      } else {\n        if (\n          matches &&\n          (!piece || piece.toLowerCase() == moves[i].piece) &&\n          SQUARES[from] == moves[i].from &&\n          SQUARES[to] == moves[i].to &&\n          (!promotion || promotion.toLowerCase() == moves[i].promotion)\n        ) {\n          return moves[i]\n        }\n      }\n    }\n\n    return null\n  }\n\n  /*****************************************************************************\n   * UTILITY FUNCTIONS\n   ****************************************************************************/\n  function rank(i) {\n    return i >> 4\n  }\n\n  function file(i) {\n    return i & 15\n  }\n\n  function algebraic(i) {\n    var f = file(i),\n      r = rank(i)\n    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1)\n  }\n\n  function swap_color(c) {\n    return c === WHITE ? BLACK : WHITE\n  }\n\n  function is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1\n  }\n\n  /* pretty = external move object */\n  function make_pretty(ugly_move) {\n    var move = clone(ugly_move)\n    move.san = move_to_san(move, false)\n    move.to = algebraic(move.to)\n    move.from = algebraic(move.from)\n\n    var flags = ''\n\n    for (var flag in BITS) {\n      if (BITS[flag] & move.flags) {\n        flags += FLAGS[flag]\n      }\n    }\n    move.flags = flags\n\n    return move\n  }\n\n  function clone(obj) {\n    var dupe = obj instanceof Array ? [] : {}\n\n    for (var property in obj) {\n      if (typeof property === 'object') {\n        dupe[property] = clone(obj[property])\n      } else {\n        dupe[property] = obj[property]\n      }\n    }\n\n    return dupe\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n  }\n\n  /*****************************************************************************\n   * DEBUGGING UTILITIES\n   ****************************************************************************/\n  function perft(depth) {\n    var moves = generate_moves({ legal: false })\n    var nodes = 0\n    var color = turn\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i])\n      if (!king_attacked(color)) {\n        if (depth - 1 > 0) {\n          var child_nodes = perft(depth - 1)\n          nodes += child_nodes\n        } else {\n          nodes++\n        }\n      }\n      undo_move()\n    }\n\n    return nodes\n  }\n\n  return {\n    /***************************************************************************\n     * PUBLIC CONSTANTS (is there a better way to do this?)\n     **************************************************************************/\n    WHITE: WHITE,\n    BLACK: BLACK,\n    PAWN: PAWN,\n    KNIGHT: KNIGHT,\n    BISHOP: BISHOP,\n    ROOK: ROOK,\n    QUEEN: QUEEN,\n    KING: KING,\n    SQUARES: (function() {\n      /* from the ECMA-262 spec (section 12.6.4):\n       * \"The mechanics of enumerating the properties ... is\n       * implementation dependent\"\n       * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n       * ordered correctly\n       */\n      var keys = []\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n        if (i & 0x88) {\n          i += 7\n          continue\n        }\n        keys.push(algebraic(i))\n      }\n      return keys\n    })(),\n    FLAGS: FLAGS,\n\n    /***************************************************************************\n     * PUBLIC API\n     **************************************************************************/\n    load: function(fen) {\n      return load(fen)\n    },\n\n    reset: function() {\n      return reset()\n    },\n\n    moves: function(options) {\n      /* The internal representation of a chess move is in 0x88 format, and\n       * not meant to be human-readable.  The code below converts the 0x88\n       * square coordinates to algebraic coordinates.  It also prunes an\n       * unnecessary move keys resulting from a verbose call.\n       */\n\n      var ugly_moves = generate_moves(options)\n      var moves = []\n\n      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n        /* does the user want a full move object (most likely not), or just\n         * SAN\n         */\n        if (\n          typeof options !== 'undefined' &&\n          'verbose' in options &&\n          options.verbose\n        ) {\n          moves.push(make_pretty(ugly_moves[i]))\n        } else {\n          moves.push(move_to_san(ugly_moves[i], false))\n        }\n      }\n\n      return moves\n    },\n\n    in_check: function() {\n      return in_check()\n    },\n\n    in_checkmate: function() {\n      return in_checkmate()\n    },\n\n    in_stalemate: function() {\n      return in_stalemate()\n    },\n\n    in_draw: function() {\n      return (\n        half_moves >= 100 ||\n        in_stalemate() ||\n        insufficient_material() ||\n        in_threefold_repetition()\n      )\n    },\n\n    insufficient_material: function() {\n      return insufficient_material()\n    },\n\n    in_threefold_repetition: function() {\n      return in_threefold_repetition()\n    },\n\n    game_over: function() {\n      return (\n        half_moves >= 100 ||\n        in_checkmate() ||\n        in_stalemate() ||\n        insufficient_material() ||\n        in_threefold_repetition()\n      )\n    },\n\n    validate_fen: function(fen) {\n      return validate_fen(fen)\n    },\n\n    fen: function() {\n      return generate_fen()\n    },\n\n    board: function() {\n      var output = [],\n        row = []\n\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n        if (board[i] == null) {\n          row.push(null)\n        } else {\n          row.push({ type: board[i].type, color: board[i].color })\n        }\n        if ((i + 1) & 0x88) {\n          output.push(row)\n          row = []\n          i += 8\n        }\n      }\n\n      return output\n    },\n\n    pgn: function(options) {\n      /* using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      var newline =\n        typeof options === 'object' && typeof options.newline_char === 'string'\n          ? options.newline_char\n          : '\\n'\n      var max_width =\n        typeof options === 'object' && typeof options.max_width === 'number'\n          ? options.max_width\n          : 0\n      var result = []\n      var header_exists = false\n\n      /* add the PGN header headerrmation */\n      for (var i in header) {\n        /* TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         */\n        result.push('[' + i + ' \"' + header[i] + '\"]' + newline)\n        header_exists = true\n      }\n\n      if (header_exists && history.length) {\n        result.push(newline)\n      }\n\n      var append_comment = function(move_string) {\n        var comment = comments[generate_fen()]\n        if (typeof comment !== 'undefined') {\n          var delimiter = move_string.length > 0 ? ' ' : '';\n          move_string = `${move_string}${delimiter}{${comment}}`\n        }\n        return move_string\n      }\n\n      /* pop all of history onto reversed_history */\n      var reversed_history = []\n      while (history.length > 0) {\n        reversed_history.push(undo_move())\n      }\n\n      var moves = []\n      var move_string = ''\n\n      /* special case of a commented starting position with no moves */\n      if (reversed_history.length === 0) {\n        moves.push(append_comment(''))\n      }\n\n      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n      while (reversed_history.length > 0) {\n        move_string = append_comment(move_string)\n        var move = reversed_history.pop()\n\n        /* if the position started with black to move, start PGN with 1. ... */\n        if (!history.length && move.color === 'b') {\n          move_string = move_number + '. ...'\n        } else if (move.color === 'w') {\n          /* store the previous generated move_string if we have one */\n          if (move_string.length) {\n            moves.push(move_string)\n          }\n          move_string = move_number + '.'\n        }\n\n        move_string = move_string + ' ' + move_to_san(move, false)\n        make_move(move)\n      }\n\n      /* are there any other leftover moves? */\n      if (move_string.length) {\n        moves.push(append_comment(move_string))\n      }\n\n      /* is there a result? */\n      if (typeof header.Result !== 'undefined') {\n        moves.push(header.Result)\n      }\n\n      /* history should be back to what it was before we started generating PGN,\n       * so join together moves\n       */\n      if (max_width === 0) {\n        return result.join('') + moves.join(' ')\n      }\n\n      var strip = function() {\n        if (result.length > 0 && result[result.length - 1] === ' ') {\n          result.pop();\n          return true;\n        }\n        return false;\n      };\n\n      /* NB: this does not preserve comment whitespace. */\n      var wrap_comment = function(width, move) {\n        for (var token of move.split(' ')) {\n          if (!token) {\n            continue;\n          }\n          if (width + token.length > max_width) {\n            while (strip()) {\n              width--;\n            }\n            result.push(newline);\n            width = 0;\n          }\n          result.push(token);\n          width += token.length;\n          result.push(' ');\n          width++;\n        }\n        if (strip()) {\n          width--;\n        }\n        return width;\n      };\n\n      /* wrap the PGN output at max_width */\n      var current_width = 0\n      for (var i = 0; i < moves.length; i++) {\n        if (current_width + moves[i].length > max_width) {\n          if (moves[i].includes('{')) {\n            current_width = wrap_comment(current_width, moves[i]);\n            continue;\n          }\n        }\n        /* if the current move will push past max_width */\n        if (current_width + moves[i].length > max_width && i !== 0) {\n          /* don't end the line with whitespace */\n          if (result[result.length - 1] === ' ') {\n            result.pop()\n          }\n\n          result.push(newline)\n          current_width = 0\n        } else if (i !== 0) {\n          result.push(' ')\n          current_width++\n        }\n        result.push(moves[i])\n        current_width += moves[i].length\n      }\n\n      return result.join('')\n    },\n\n    load_pgn: function(pgn, options) {\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy =\n        typeof options !== 'undefined' && 'sloppy' in options\n          ? options.sloppy\n          : false\n\n      function mask(str) {\n        return str.replace(/\\\\/g, '\\\\')\n      }\n\n      function has_keys(object) {\n        for (var key in object) {\n          return true\n        }\n        return false\n      }\n\n      function parse_pgn_header(header, options) {\n        var newline_char =\n          typeof options === 'object' &&\n          typeof options.newline_char === 'string'\n            ? options.newline_char\n            : '\\r?\\n'\n        var header_obj = {}\n        var headers = header.split(new RegExp(mask(newline_char)))\n        var key = ''\n        var value = ''\n\n        for (var i = 0; i < headers.length; i++) {\n          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1')\n          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\ *\\]$/, '$1')\n          if (trim(key).length > 0) {\n            header_obj[key] = value\n          }\n        }\n\n        return header_obj\n      }\n\n      var newline_char =\n        typeof options === 'object' && typeof options.newline_char === 'string'\n          ? options.newline_char\n          : '\\r?\\n'\n\n      // RegExp to split header. Takes advantage of the fact that header and movetext\n      // will always have a blank line between them (ie, two newline_char's).\n      // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\r?\\n){2}/\n      var header_regex = new RegExp(\n        '^(\\\\[((?:' +\n          mask(newline_char) +\n          ')|.)*\\\\])' +\n          '(?:' +\n          mask(newline_char) +\n          '){2}'\n      )\n\n      // If no header given, begin with moves.\n      var header_string = header_regex.test(pgn)\n        ? header_regex.exec(pgn)[1]\n        : ''\n\n      // Put the board in the starting position\n      reset()\n\n      /* parse PGN header */\n      var headers = parse_pgn_header(header_string, options)\n      for (var key in headers) {\n        set_header([key, headers[key]])\n      }\n\n      /* load the starting position indicated by [Setup '1'] and\n       * [FEN position] */\n      if (headers['SetUp'] === '1') {\n        if (!('FEN' in headers && load(headers['FEN'], true))) {\n          // second argument to load: don't clear the headers\n          return false\n        }\n      }\n\n      /* NB: the regexes below that delete move numbers, recursive\n       * annotations, and numeric annotation glyphs may also match\n       * text in comments. To prevent this, we transform comments\n       * by hex-encoding them in place and decoding them again after\n       * the other tokens have been deleted.\n       *\n       * While the spec states that PGN files should be ASCII encoded,\n       * we use {en,de}codeURIComponent here to support arbitrary UTF8\n       * as a convenience for modern users */\n\n      var to_hex = function(string) {\n        return Array\n          .from(string)\n          .map(function(c) {\n            /* encodeURI doesn't transform most ASCII characters,\n             * so we handle these ourselves */\n            return c.charCodeAt(0) < 128\n              ? c.charCodeAt(0).toString(16)\n              : encodeURIComponent(c).replace(/\\%/g, '').toLowerCase()\n          })\n          .join('')\n      }\n\n      var from_hex = function(string) {\n        return string.length == 0\n          ? ''\n          : decodeURIComponent('%' + string.match(/.{1,2}/g).join('%'))\n      }\n\n      var encode_comment = function(string) {\n        string = string.replace(new RegExp(mask(newline_char), 'g'), ' ')\n        return `{${to_hex(string.slice(1, string.length - 1))}}`\n      }\n\n      var decode_comment = function(string) {\n        if (string.startsWith('{') && string.endsWith('}')) {\n          return from_hex(string.slice(1, string.length - 1))\n        }\n      }\n\n      /* delete header to get the moves */\n      var ms = pgn\n        .replace(header_string, '')\n        .replace(\n          /* encode comments so they don't get deleted below */\n          new RegExp(`(\\{[^}]*\\})+?|;([^${mask(newline_char)}]*)`, 'g'),\n          function(match, bracket, semicolon) {\n            return bracket !== undefined\n              ? encode_comment(bracket)\n              : ' ' + encode_comment(`{${semicolon.slice(1)}}`)\n          }\n        )\n        .replace(new RegExp(mask(newline_char), 'g'), ' ')\n\n      /* delete recursive annotation variations */\n      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n      while (rav_regex.test(ms)) {\n        ms = ms.replace(rav_regex, '')\n      }\n\n      /* delete move numbers */\n      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\n\n      /* delete ... indicating black to move */\n      ms = ms.replace(/\\.\\.\\./g, '')\n\n      /* delete numeric annotation glyphs */\n      ms = ms.replace(/\\$\\d+/g, '')\n\n      /* trim and get array of moves */\n      var moves = trim(ms).split(new RegExp(/\\s+/))\n\n      /* delete empty entries */\n      moves = moves\n        .join(',')\n        .replace(/,,+/g, ',')\n        .split(',')\n      var move = ''\n\n      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n        var comment = decode_comment(moves[half_move])\n        if (comment !== undefined) {\n          comments[generate_fen()] = comment\n          continue\n        }\n        move = move_from_san(moves[half_move], sloppy)\n\n        /* move not possible! (don't clear the board to examine to show the\n         * latest valid position)\n         */\n        if (move == null) {\n          return false\n        } else {\n          make_move(move)\n        }\n      }\n\n      comment = decode_comment(moves[moves.length - 1])\n      if (comment !== undefined) {\n        comments[generate_fen()] = comment\n        moves.pop()\n      }\n\n      /* examine last move */\n      move = moves[moves.length - 1]\n      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n        if (has_keys(header) && typeof header.Result === 'undefined') {\n          set_header(['Result', move])\n        }\n      } else {\n        move = move_from_san(move, sloppy)\n        if (move == null) {\n          return false\n        } else {\n          make_move(move)\n        }\n      }\n      return true\n    },\n\n    header: function() {\n      return set_header(arguments)\n    },\n\n    ascii: function() {\n      return ascii()\n    },\n\n    turn: function() {\n      return turn\n    },\n\n    move: function(move, options) {\n      /* The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n       *         to :'h8',      fields are ignored)\n       *         promotion: 'q',\n       *      })\n       */\n\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy =\n        typeof options !== 'undefined' && 'sloppy' in options\n          ? options.sloppy\n          : false\n\n      var move_obj = null\n\n      if (typeof move === 'string') {\n        move_obj = move_from_san(move, sloppy)\n      } else if (typeof move === 'object') {\n        var moves = generate_moves()\n\n        /* convert the pretty move object to an ugly move object */\n        for (var i = 0, len = moves.length; i < len; i++) {\n          if (\n            move.from === algebraic(moves[i].from) &&\n            move.to === algebraic(moves[i].to) &&\n            (!('promotion' in moves[i]) ||\n              move.promotion === moves[i].promotion)\n          ) {\n            move_obj = moves[i]\n            break\n          }\n        }\n      }\n\n      /* failed to find move */\n      if (!move_obj) {\n        return null\n      }\n\n      /* need to make a copy of move because we can't generate SAN after the\n       * move is made\n       */\n      var pretty_move = make_pretty(move_obj)\n\n      make_move(move_obj)\n\n      return pretty_move\n    },\n\n    undo: function() {\n      var move = undo_move()\n      return move ? make_pretty(move) : null\n    },\n\n    clear: function() {\n      return clear()\n    },\n\n    put: function(piece, square) {\n      return put(piece, square)\n    },\n\n    get: function(square) {\n      return get(square)\n    },\n\n    remove: function(square) {\n      return remove(square)\n    },\n\n    perft: function(depth) {\n      return perft(depth)\n    },\n\n    square_color: function(square) {\n      if (square in SQUARES) {\n        var sq_0x88 = SQUARES[square]\n        return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark'\n      }\n\n      return null\n    },\n\n    history: function(options) {\n      var reversed_history = []\n      var move_history = []\n      var verbose =\n        typeof options !== 'undefined' &&\n        'verbose' in options &&\n        options.verbose\n\n      while (history.length > 0) {\n        reversed_history.push(undo_move())\n      }\n\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop()\n        if (verbose) {\n          move_history.push(make_pretty(move))\n        } else {\n          move_history.push(move_to_san(move))\n        }\n        make_move(move)\n      }\n\n      return move_history\n    },\n\n    get_comment: function() {\n      return comments[generate_fen()];\n    },\n\n    set_comment: function(comment) {\n      comments[generate_fen()] = comment.replace('{', '[').replace('}', ']');\n    },\n\n    delete_comment: function() {\n      var comment = comments[generate_fen()];\n      delete comments[generate_fen()];\n      return comment;\n    },\n\n    get_comments: function() {\n      prune_comments();\n      return Object.keys(comments).map(function(fen) {\n        return {fen: fen, comment: comments[fen]};\n      });\n    },\n\n    delete_comments: function() {\n      prune_comments();\n      return Object.keys(comments)\n        .map(function(fen) {\n          var comment = comments[fen];\n          delete comments[fen];\n          return {fen: fen, comment: comment};\n        });\n    }\n  }\n}\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (typeof exports !== 'undefined') exports.Chess = Chess\n/* export Chess object for any RequireJS compatible environment */\nif (typeof define !== 'undefined')\n  define(function() {\n    return Chess\n  })\n","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"sourceRoot":""}