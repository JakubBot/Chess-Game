{"version":3,"sources":["../node_modules/react-firebase-hooks/auth/dist/index.esm.js","../node_modules/@chrisoakman/chessboardjs/dist/chessboard-1.0.0.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","defaultState","defaultValue","loading","undefined","value","useLoadingValue","getDefaultValue","_a","useReducer","state","action","type","error","dispatch","reset","setError","setValue","useAuthState","auth","currentUser","useEffect","listener","onAuthStateChanged","ChessBoard","$","window","COLUMNS","split","START_FEN","START_POSITION","fenToObj","CSS","throttle","f","interval","scope","timeout","shouldFire","args","handleTimeout","fire","setTimeout","_args","uuid","replace","c","Math","random","toString","deepCopy","thing","JSON","parse","stringify","parseSemVer","version","tmp","major","parseInt","minor","patch","interpolateTemplate","str","obj","key","keyTemplateStr","indexOf","isString","isFunction","isInteger","isFinite","floor","validAnimationSpeed","speed","validMove","move","squares","validSquare","square","search","validPieceCode","code","validFen","fen","chunks","expandFenEmptySquares","validPositionObject","pos","isPlainObject","validJQueryVersion","fn","jquery","minimum","pieceCodeToFen","piece","pieceCodeLetters","toUpperCase","toLowerCase","rows","position","currentRow","row","colIdx","j","objToFen","squeezeFenEmptySquares","squareDistance","squareA","squareB","squareAArray","squareAx","squareAy","squareBArray","squareBx","squareBy","xDelta","abs","yDelta","findClosestPiece","closestSquares","push","distance","sort","a","b","surroundingSquares","createRadius","calculatePositionFromMoves","moves","newPosition","expandConfig","config","rate","orientation","showNotation","draggable","dropOffBoard","sparePieces","pieceTheme","process","appearSpeed","moveSpeed","snapbackSpeed","snapSpeed","trashSpeed","dragThrottleRate","containerElOrString","alert","checkJQuery","$container","charAt","checkContainerArg","expandConfigArgumentShorthand","$board","$draggedPiece","$sparePiecesTop","$sparePiecesBottom","widget","boardBorderSize","currentOrientation","currentPosition","draggedPiece","draggedPieceLocation","draggedPieceSource","isDragging","sparePiecesElsIds","squareElsIds","squareElsOffsets","squareSize","msg","showErrors","errorText","console","log","buildPieceImgSrc","buildPieceHTML","hidden","id","html","buildSparePiecesHTML","color","pieces","animateSquareToSquare","src","dest","completeFn","$srcSquare","srcSquarePosition","offset","$destSquare","destSquarePosition","animatedPieceId","append","$animatedPiece","css","display","top","left","find","remove","opts","duration","complete","animate","animateSparePieceToSquare","srcOffset","destOffset","pieceId","doAnimations","animations","oldPos","newPos","numFinished","animation","fadeOut","onFinishAnimation3","source","destination","fadeIn","drawPositionInstant","onMoveEnd","calculateAnimations","pos1","pos2","squaresMovedTo","closestPiece","drawBoard","alpha","reverse","squareColor","buildBoardHTML","setCurrentPosition","onChange","isXYOnSquare","x","y","removeSquareHighlights","removeClass","highlight1","highlight2","trashDraggedPiece","beginDraggingPiece","onDragStart","captureSquareOffsets","attr","addClass","updateDraggedPiece","location","onDragMove","stopDraggedPiece","onDrop","oldPosition","result","sourceSquarePosition","onSnapbackEnd","snapbackDraggedPiece","targetSquarePosition","onSnapEnd","dropDraggedPieceOnSquare","stopDefault","evt","preventDefault","mousedownSquare","pageX","pageY","touchstartSquare","e","originalEvent","changedTouches","mousedownSparePiece","touchstartSparePiece","clear","useAnimation","destroy","unbind","flip","arg","resize","containerWidth","width","boardWidth","calculateSquareSize","height","start","throttledMousemoveWindow","throttledTouchmoveWindow","mouseupWindow","touchendWindow","mouseenterSquare","onMouseoverSquare","currentTarget","mouseleaveSquare","onMouseoutSquare","whitePiece","blackPiece","createElIds","hasSparePieces","buildContainerHTML","board","sparePiecesTop","sparePiecesBottom","draggedPieceId","initDOM","on","$window","document","documentElement","addEvents"],"mappings":"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","file":"static/js/0.0bb23c48.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar defaultState = function (defaultValue) {\r\n    return {\r\n        loading: defaultValue === undefined || defaultValue === null,\r\n        value: defaultValue,\r\n    };\r\n};\r\nvar reducer = function () { return function (state, action) {\r\n    switch (action.type) {\r\n        case 'error':\r\n            return __assign({}, state, { error: action.error, loading: false, value: undefined });\r\n        case 'reset':\r\n            return defaultState(action.defaultValue);\r\n        case 'value':\r\n            return __assign({}, state, { error: undefined, loading: false, value: action.value });\r\n        default:\r\n            return state;\r\n    }\r\n}; };\r\nvar useLoadingValue = (function (getDefaultValue) {\r\n    var defaultValue = getDefaultValue ? getDefaultValue() : undefined;\r\n    var _a = useReducer(reducer(), defaultState(defaultValue)), state = _a[0], dispatch = _a[1];\r\n    var reset = function () {\r\n        var defaultValue = getDefaultValue ? getDefaultValue() : undefined;\r\n        dispatch({ type: 'reset', defaultValue: defaultValue });\r\n    };\r\n    var setError = function (error) {\r\n        dispatch({ type: 'error', error: error });\r\n    };\r\n    var setValue = function (value) {\r\n        dispatch({ type: 'value', value: value });\r\n    };\r\n    return {\r\n        error: state.error,\r\n        loading: state.loading,\r\n        reset: reset,\r\n        setError: setError,\r\n        setValue: setValue,\r\n        value: state.value,\r\n    };\r\n});\n\nvar useAuthState = (function (auth) {\r\n    var _a = useLoadingValue(function () { return auth.currentUser; }), error = _a.error, loading = _a.loading, setError = _a.setError, setValue = _a.setValue, value = _a.value;\r\n    useEffect(function () {\r\n        var listener = auth.onAuthStateChanged(setValue, setError);\r\n        return function () {\r\n            listener();\r\n        };\r\n    }, [auth]);\r\n    return [value, loading, error];\r\n});\n\nexport { useAuthState };\n","// chessboard.js v1.0.0\n// https://github.com/oakmac/chessboardjs/\n//\n// Copyright (c) 2019, Chris Oakman\n// Released under the MIT license\n// https://github.com/oakmac/chessboardjs/blob/master/LICENSE.md\n\n// start anonymous scope\n\nconst ChessBoard = function () {\n  'use strict'\n\n  var $ = window['jQuery']\n\n  // ---------------------------------------------------------------------------\n  // Constants\n  // ---------------------------------------------------------------------------\n\n  var COLUMNS = 'abcdefgh'.split('')\n  var DEFAULT_DRAG_THROTTLE_RATE = 20\n  var ELLIPSIS = '…'\n  var MINIMUM_JQUERY_VERSION = '1.8.3'\n  var RUN_ASSERTS = false\n  var START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR'\n  var START_POSITION = fenToObj(START_FEN)\n\n  // default animation speeds\n  var DEFAULT_APPEAR_SPEED = 200\n  var DEFAULT_MOVE_SPEED = 200\n  var DEFAULT_SNAPBACK_SPEED = 60\n  var DEFAULT_SNAP_SPEED = 30\n  var DEFAULT_TRASH_SPEED = 100\n\n  // use unique class names to prevent clashing with anything else on the page\n  // and simplify selectors\n  // NOTE: these should never change\n  var CSS = {}\n  CSS['alpha'] = 'alpha-d2270'\n  CSS['black'] = 'black-3c85d'\n  CSS['board'] = 'board-b72b1'\n  CSS['chessboard'] = 'chessboard-63f37'\n  CSS['clearfix'] = 'clearfix-7da63'\n  CSS['highlight1'] = 'highlight1-32417'\n  CSS['highlight2'] = 'highlight2-9c5d2'\n  CSS['notation'] = 'notation-322f9'\n  CSS['numeric'] = 'numeric-fc462'\n  CSS['piece'] = 'piece-417db'\n  CSS['row'] = 'row-5277c'\n  CSS['sparePieces'] = 'spare-pieces-7492f'\n  CSS['sparePiecesBottom'] = 'spare-pieces-bottom-ae20f'\n  CSS['sparePiecesTop'] = 'spare-pieces-top-4028b'\n  CSS['square'] = 'square-55d63'\n  CSS['white'] = 'white-1e1d7'\n\n  // ---------------------------------------------------------------------------\n  // Misc Util Functions\n  // ---------------------------------------------------------------------------\n\n  function throttle (f, interval, scope) {\n    var timeout = 0\n    var shouldFire = false\n    var args = []\n\n    var handleTimeout = function () {\n      timeout = 0\n      if (shouldFire) {\n        shouldFire = false\n        fire()\n      }\n    }\n\n    var fire = function () {\n      timeout = window.setTimeout(handleTimeout, interval)\n      f.apply(scope, args)\n    }\n\n    return function (_args) {\n      args = arguments\n      if (!timeout) {\n        fire()\n      } else {\n        shouldFire = true\n      }\n    }\n  }\n\n  // function debounce (f, interval, scope) {\n  //   var timeout = 0\n  //   return function (_args) {\n  //     window.clearTimeout(timeout)\n  //     var args = arguments\n  //     timeout = window.setTimeout(function () {\n  //       f.apply(scope, args)\n  //     }, interval)\n  //   }\n  // }\n\n  function uuid () {\n    return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function (c) {\n      var r = (Math.random() * 16) | 0\n      return r.toString(16)\n    })\n  }\n\n  function deepCopy (thing) {\n    return JSON.parse(JSON.stringify(thing))\n  }\n\n  function parseSemVer (version) {\n    var tmp = version.split('.')\n    return {\n      major: parseInt(tmp[0], 10),\n      minor: parseInt(tmp[1], 10),\n      patch: parseInt(tmp[2], 10)\n    }\n  }\n\n  // returns true if version is >= minimum\n  function validSemanticVersion (version, minimum) {\n    version = parseSemVer(version)\n    minimum = parseSemVer(minimum)\n\n    var versionNum = (version.major * 100000 * 100000) +\n                     (version.minor * 100000) +\n                     version.patch\n    var minimumNum = (minimum.major * 100000 * 100000) +\n                     (minimum.minor * 100000) +\n                     minimum.patch\n\n    return versionNum >= minimumNum\n  }\n\n  function interpolateTemplate (str, obj) {\n    for (var key in obj) {\n      if (!obj.hasOwnProperty(key)) continue\n      var keyTemplateStr = '{' + key + '}'\n      var value = obj[key]\n      while (str.indexOf(keyTemplateStr) !== -1) {\n        str = str.replace(keyTemplateStr, value)\n      }\n    }\n    return str\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(interpolateTemplate('abc', {a: 'x'}) === 'abc')\n    console.assert(interpolateTemplate('{a}bc', {}) === '{a}bc')\n    console.assert(interpolateTemplate('{a}bc', {p: 'q'}) === '{a}bc')\n    console.assert(interpolateTemplate('{a}bc', {a: 'x'}) === 'xbc')\n    console.assert(interpolateTemplate('{a}bc{a}bc', {a: 'x'}) === 'xbcxbc')\n    console.assert(interpolateTemplate('{a}{a}{b}', {a: 'x', b: 'y'}) === 'xxy')\n  }\n\n  // ---------------------------------------------------------------------------\n  // Predicates\n  // ---------------------------------------------------------------------------\n\n  function isString (s) {\n    return typeof s === 'string'\n  }\n\n  function isFunction (f) {\n    return typeof f === 'function'\n  }\n\n  function isInteger (n) {\n    return typeof n === 'number' &&\n           isFinite(n) &&\n           Math.floor(n) === n\n  }\n\n  function validAnimationSpeed (speed) {\n    if (speed === 'fast' || speed === 'slow') return true\n    if (!isInteger(speed)) return false\n    return speed >= 0\n  }\n\n  function validThrottleRate (rate) {\n    return isInteger(rate) &&\n           rate >= 1\n  }\n\n  function validMove (move) {\n    // move should be a string\n    if (!isString(move)) return false\n\n    // move should be in the form of \"e2-e4\", \"f6-d5\"\n    var squares = move.split('-')\n    if (squares.length !== 2) return false\n\n    return validSquare(squares[0]) && validSquare(squares[1])\n  }\n\n  function validSquare (square) {\n    return isString(square) && square.search(/^[a-h][1-8]$/) !== -1\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(validSquare('a1'))\n    console.assert(validSquare('e2'))\n    console.assert(!validSquare('D2'))\n    console.assert(!validSquare('g9'))\n    console.assert(!validSquare('a'))\n    console.assert(!validSquare(true))\n    console.assert(!validSquare(null))\n    console.assert(!validSquare({}))\n  }\n\n  function validPieceCode (code) {\n    return isString(code) && code.search(/^[bw][KQRNBP]$/) !== -1\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(validPieceCode('bP'))\n    console.assert(validPieceCode('bK'))\n    console.assert(validPieceCode('wK'))\n    console.assert(validPieceCode('wR'))\n    console.assert(!validPieceCode('WR'))\n    console.assert(!validPieceCode('Wr'))\n    console.assert(!validPieceCode('a'))\n    console.assert(!validPieceCode(true))\n    console.assert(!validPieceCode(null))\n    console.assert(!validPieceCode({}))\n  }\n\n  function validFen (fen) {\n    if (!isString(fen)) return false\n\n    // cut off any move, castling, etc info from the end\n    // we're only interested in position information\n    fen = fen.replace(/ .+$/, '')\n\n    // expand the empty square numbers to just 1s\n    fen = expandFenEmptySquares(fen)\n\n    // FEN should be 8 sections separated by slashes\n    var chunks = fen.split('/')\n    if (chunks.length !== 8) return false\n\n    // check each section\n    for (var i = 0; i < 8; i++) {\n      if (chunks[i].length !== 8 ||\n          chunks[i].search(/[^kqrnbpKQRNBP1]/) !== -1) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(validFen(START_FEN))\n    console.assert(validFen('8/8/8/8/8/8/8/8'))\n    console.assert(validFen('r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R'))\n    console.assert(validFen('3r3r/1p4pp/2nb1k2/pP3p2/8/PB2PN2/p4PPP/R4RK1 b - - 0 1'))\n    console.assert(!validFen('3r3z/1p4pp/2nb1k2/pP3p2/8/PB2PN2/p4PPP/R4RK1 b - - 0 1'))\n    console.assert(!validFen('anbqkbnr/8/8/8/8/8/PPPPPPPP/8'))\n    console.assert(!validFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/'))\n    console.assert(!validFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBN'))\n    console.assert(!validFen('888888/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR'))\n    console.assert(!validFen('888888/pppppppp/74/8/8/8/PPPPPPPP/RNBQKBNR'))\n    console.assert(!validFen({}))\n  }\n\n  function validPositionObject (pos) {\n    if (!$.isPlainObject(pos)) return false\n\n    for (var i in pos) {\n      if (!pos.hasOwnProperty(i)) continue\n\n      if (!validSquare(i) || !validPieceCode(pos[i])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(validPositionObject(START_POSITION))\n    console.assert(validPositionObject({}))\n    console.assert(validPositionObject({e2: 'wP'}))\n    console.assert(validPositionObject({e2: 'wP', d2: 'wP'}))\n    console.assert(!validPositionObject({e2: 'BP'}))\n    console.assert(!validPositionObject({y2: 'wP'}))\n    console.assert(!validPositionObject(null))\n    console.assert(!validPositionObject('start'))\n    console.assert(!validPositionObject(START_FEN))\n  }\n\n  function isTouchDevice () {\n    return 'ontouchstart' in document.documentElement\n  }\n\n  function validJQueryVersion () {\n    return typeof window.$ &&\n           $.fn &&\n           $.fn.jquery &&\n           validSemanticVersion($.fn.jquery, MINIMUM_JQUERY_VERSION)\n  }\n\n  // ---------------------------------------------------------------------------\n  // Chess Util Functions\n  // ---------------------------------------------------------------------------\n\n  // convert FEN piece code to bP, wK, etc\n  function fenToPieceCode (piece) {\n    // black piece\n    if (piece.toLowerCase() === piece) {\n      return 'b' + piece.toUpperCase()\n    }\n\n    // white piece\n    return 'w' + piece.toUpperCase()\n  }\n\n  // convert bP, wK, etc code to FEN structure\n  function pieceCodeToFen (piece) {\n    var pieceCodeLetters = piece.split('')\n\n    // white piece\n    if (pieceCodeLetters[0] === 'w') {\n      return pieceCodeLetters[1].toUpperCase()\n    }\n\n    // black piece\n    return pieceCodeLetters[1].toLowerCase()\n  }\n\n  // convert FEN string to position object\n  // returns false if the FEN string is invalid\n  function fenToObj (fen) {\n    if (!validFen(fen)) return false\n\n    // cut off any move, castling, etc info from the end\n    // we're only interested in position information\n    fen = fen.replace(/ .+$/, '')\n\n    var rows = fen.split('/')\n    var position = {}\n\n    var currentRow = 8\n    for (var i = 0; i < 8; i++) {\n      var row = rows[i].split('')\n      var colIdx = 0\n\n      // loop through each character in the FEN section\n      for (var j = 0; j < row.length; j++) {\n        // number / empty squares\n        if (row[j].search(/[1-8]/) !== -1) {\n          var numEmptySquares = parseInt(row[j], 10)\n          colIdx = colIdx + numEmptySquares\n        } else {\n          // piece\n          var square = COLUMNS[colIdx] + currentRow\n          position[square] = fenToPieceCode(row[j])\n          colIdx = colIdx + 1\n        }\n      }\n\n      currentRow = currentRow - 1\n    }\n\n    return position\n  }\n\n  // position object to FEN string\n  // returns false if the obj is not a valid position object\n  function objToFen (obj) {\n    if (!validPositionObject(obj)) return false\n\n    var fen = ''\n\n    var currentRow = 8\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var square = COLUMNS[j] + currentRow\n\n        // piece exists\n        if (obj.hasOwnProperty(square)) {\n          fen = fen + pieceCodeToFen(obj[square])\n        } else {\n          // empty space\n          fen = fen + '1'\n        }\n      }\n\n      if (i !== 7) {\n        fen = fen + '/'\n      }\n\n      currentRow = currentRow - 1\n    }\n\n    // squeeze the empty numbers together\n    fen = squeezeFenEmptySquares(fen)\n\n    return fen\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(objToFen(START_POSITION) === START_FEN)\n    console.assert(objToFen({}) === '8/8/8/8/8/8/8/8')\n    console.assert(objToFen({a2: 'wP', 'b2': 'bP'}) === '8/8/8/8/8/8/Pp6/8')\n  }\n\n  function squeezeFenEmptySquares (fen) {\n    return fen.replace(/11111111/g, '8')\n      .replace(/1111111/g, '7')\n      .replace(/111111/g, '6')\n      .replace(/11111/g, '5')\n      .replace(/1111/g, '4')\n      .replace(/111/g, '3')\n      .replace(/11/g, '2')\n  }\n\n  function expandFenEmptySquares (fen) {\n    return fen.replace(/8/g, '11111111')\n      .replace(/7/g, '1111111')\n      .replace(/6/g, '111111')\n      .replace(/5/g, '11111')\n      .replace(/4/g, '1111')\n      .replace(/3/g, '111')\n      .replace(/2/g, '11')\n  }\n\n  // returns the distance between two squares\n  function squareDistance (squareA, squareB) {\n    var squareAArray = squareA.split('')\n    var squareAx = COLUMNS.indexOf(squareAArray[0]) + 1\n    var squareAy = parseInt(squareAArray[1], 10)\n\n    var squareBArray = squareB.split('')\n    var squareBx = COLUMNS.indexOf(squareBArray[0]) + 1\n    var squareBy = parseInt(squareBArray[1], 10)\n\n    var xDelta = Math.abs(squareAx - squareBx)\n    var yDelta = Math.abs(squareAy - squareBy)\n\n    if (xDelta >= yDelta) return xDelta\n    return yDelta\n  }\n\n  // returns the square of the closest instance of piece\n  // returns false if no instance of piece is found in position\n  function findClosestPiece (position, piece, square) {\n    // create array of closest squares from square\n    var closestSquares = createRadius(square)\n\n    // search through the position in order of distance for the piece\n    for (var i = 0; i < closestSquares.length; i++) {\n      var s = closestSquares[i]\n\n      if (position.hasOwnProperty(s) && position[s] === piece) {\n        return s\n      }\n    }\n\n    return false\n  }\n\n  // returns an array of closest squares from square\n  function createRadius (square) {\n    var squares = []\n\n    // calculate distance of all squares\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var s = COLUMNS[i] + (j + 1)\n\n        // skip the square we're starting from\n        if (square === s) continue\n\n        squares.push({\n          square: s,\n          distance: squareDistance(square, s)\n        })\n      }\n    }\n\n    // sort by distance\n    squares.sort(function (a, b) {\n      return a.distance - b.distance\n    })\n\n    // just return the square code\n    var surroundingSquares = []\n    for (i = 0; i < squares.length; i++) {\n      surroundingSquares.push(squares[i].square)\n    }\n\n    return surroundingSquares\n  }\n\n  // given a position and a set of moves, return a new position\n  // with the moves executed\n  function calculatePositionFromMoves (position, moves) {\n    var newPosition = deepCopy(position)\n\n    for (var i in moves) {\n      if (!moves.hasOwnProperty(i)) continue\n\n      // skip the move if the position doesn't have a piece on the source square\n      if (!newPosition.hasOwnProperty(i)) continue\n\n      var piece = newPosition[i]\n      delete newPosition[i]\n      newPosition[moves[i]] = piece\n    }\n\n    return newPosition\n  }\n\n  // TODO: add some asserts here for calculatePositionFromMoves\n\n  // ---------------------------------------------------------------------------\n  // HTML\n  // ---------------------------------------------------------------------------\n\n  function buildContainerHTML (hasSparePieces) {\n    var html = '<div class=\"{chessboard}\">'\n\n    if (hasSparePieces) {\n      html += '<div class=\"{sparePieces} {sparePiecesTop}\"></div>'\n    }\n\n    html += '<div class=\"{board}\"></div>'\n\n    if (hasSparePieces) {\n      html += '<div class=\"{sparePieces} {sparePiecesBottom}\"></div>'\n    }\n\n    html += '</div>'\n\n    return interpolateTemplate(html, CSS)\n  }\n\n  // ---------------------------------------------------------------------------\n  // Config\n  // ---------------------------------------------------------------------------\n\n  function expandConfigArgumentShorthand (config) {\n    if (config === 'start') {\n      config = {position: deepCopy(START_POSITION)}\n    } else if (validFen(config)) {\n      config = {position: fenToObj(config)}\n    } else if (validPositionObject(config)) {\n      config = {position: deepCopy(config)}\n    }\n\n    // config must be an object\n    if (!$.isPlainObject(config)) config = {}\n\n    return config\n  }\n\n  // validate config / set default options\n  function expandConfig (config) {\n    // default for orientation is white\n    if (config.orientation !== 'black') config.orientation = 'white'\n\n    // default for showNotation is true\n    if (config.showNotation !== false) config.showNotation = true\n\n    // default for draggable is false\n    if (config.draggable !== true) config.draggable = false\n\n    // default for dropOffBoard is 'snapback'\n    if (config.dropOffBoard !== 'trash') config.dropOffBoard = 'snapback'\n\n    // default for sparePieces is false\n    if (config.sparePieces !== true) config.sparePieces = false\n\n    // draggable must be true if sparePieces is enabled\n    if (config.sparePieces) config.draggable = true\n\n    // default piece theme is wikipedia\n    if (!config.hasOwnProperty('pieceTheme') ||\n        (!isString(config.pieceTheme) && !isFunction(config.pieceTheme))) {\n      config.pieceTheme = `${process.env.PUBLIC_URL}/img/chesspieces/wikipedia/{piece}.png`\n      // config.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png'\n    }\n\n    // animation speeds\n    if (!validAnimationSpeed(config.appearSpeed)) config.appearSpeed = DEFAULT_APPEAR_SPEED\n    if (!validAnimationSpeed(config.moveSpeed)) config.moveSpeed = DEFAULT_MOVE_SPEED\n    if (!validAnimationSpeed(config.snapbackSpeed)) config.snapbackSpeed = DEFAULT_SNAPBACK_SPEED\n    if (!validAnimationSpeed(config.snapSpeed)) config.snapSpeed = DEFAULT_SNAP_SPEED\n    if (!validAnimationSpeed(config.trashSpeed)) config.trashSpeed = DEFAULT_TRASH_SPEED\n\n    // throttle rate\n    if (!validThrottleRate(config.dragThrottleRate)) config.dragThrottleRate = DEFAULT_DRAG_THROTTLE_RATE\n\n    return config\n  }\n\n  // ---------------------------------------------------------------------------\n  // Dependencies\n  // ---------------------------------------------------------------------------\n\n  // check for a compatible version of jQuery\n  function checkJQuery () {\n    if (!validJQueryVersion()) {\n      var errorMsg = 'Chessboard Error 1005: Unable to find a valid version of jQuery. ' +\n        'Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or higher on the page' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg)\n      return false\n    }\n\n    return true\n  }\n\n  // return either boolean false or the $container element\n  function checkContainerArg (containerElOrString) {\n    if (containerElOrString === '') {\n      var errorMsg1 = 'Chessboard Error 1001: ' +\n        'The first argument to Chessboard() cannot be an empty string.' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg1)\n      return false\n    }\n\n    // convert containerEl to query selector if it is a string\n    if (isString(containerElOrString) &&\n        containerElOrString.charAt(0) !== '#') {\n      containerElOrString = '#' + containerElOrString\n    }\n\n    // containerEl must be something that becomes a jQuery collection of size 1\n    var $container = $(containerElOrString)\n    if ($container.length !== 1) {\n      var errorMsg2 = 'Chessboard Error 1003: ' +\n        'The first argument to Chessboard() must be the ID of a DOM node, ' +\n        'an ID query selector, or a single DOM node.' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg2)\n      return false\n    }\n\n    return $container\n  }\n\n  // ---------------------------------------------------------------------------\n  // Constructor\n  // ---------------------------------------------------------------------------\n\n  function constructor (containerElOrString, config) {\n    // first things first: check basic dependencies\n    if (!checkJQuery()) return null\n    var $container = checkContainerArg(containerElOrString)\n    if (!$container) return null\n\n    // ensure the config object is what we expect\n    config = expandConfigArgumentShorthand(config)\n    config = expandConfig(config)\n\n    // DOM elements\n    var $board = null\n    var $draggedPiece = null\n    var $sparePiecesTop = null\n    var $sparePiecesBottom = null\n\n    // constructor return object\n    var widget = {}\n\n    // -------------------------------------------------------------------------\n    // Stateful\n    // -------------------------------------------------------------------------\n\n    var boardBorderSize = 2\n    var currentOrientation = 'white'\n    var currentPosition = {}\n    var draggedPiece = null\n    var draggedPieceLocation = null\n    var draggedPieceSource = null\n    var isDragging = false\n    var sparePiecesElsIds = {}\n    var squareElsIds = {}\n    var squareElsOffsets = {}\n    var squareSize = 16\n\n    // -------------------------------------------------------------------------\n    // Validation / Errors\n    // -------------------------------------------------------------------------\n\n    function error (code, msg, obj) {\n      // do nothing if showErrors is not set\n      if (\n        config.hasOwnProperty('showErrors') !== true ||\n          config.showErrors === false\n      ) {\n        return\n      }\n\n      var errorText = 'Chessboard Error ' + code + ': ' + msg\n\n      // print to console\n      if (\n        config.showErrors === 'console' &&\n          typeof console === 'object' &&\n          typeof console.log === 'function'\n      ) {\n        console.log(errorText)\n        if (arguments.length >= 2) {\n          console.log(obj)\n        }\n        return\n      }\n\n      // alert errors\n      if (config.showErrors === 'alert') {\n        if (obj) {\n          errorText += '\\n\\n' + JSON.stringify(obj)\n        }\n        window.alert(errorText)\n        return\n      }\n\n      // custom function\n      if (isFunction(config.showErrors)) {\n        config.showErrors(code, msg, obj)\n      }\n    }\n\n    function setInitialState () {\n      currentOrientation = config.orientation\n\n      // make sure position is valid\n      if (config.hasOwnProperty('position')) {\n        if (config.position === 'start') {\n          currentPosition = deepCopy(START_POSITION)\n        } else if (validFen(config.position)) {\n          currentPosition = fenToObj(config.position)\n        } else if (validPositionObject(config.position)) {\n          currentPosition = deepCopy(config.position)\n        } else {\n          error(\n            7263,\n            'Invalid value passed to config.position.',\n            config.position\n          )\n        }\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // DOM Misc\n    // -------------------------------------------------------------------------\n\n    // calculates square size based on the width of the container\n    // got a little CSS black magic here, so let me explain:\n    // get the width of the container element (could be anything), reduce by 1 for\n    // fudge factor, and then keep reducing until we find an exact mod 8 for\n    // our square size\n    function calculateSquareSize () {\n      var containerWidth = parseInt($container.width(), 10)\n\n      // defensive, prevent infinite loop\n      if (!containerWidth || containerWidth <= 0) {\n        return 0\n      }\n\n      // pad one pixel\n      var boardWidth = containerWidth - 1\n\n      while (boardWidth % 8 !== 0 && boardWidth > 0) {\n        boardWidth = boardWidth - 1\n      }\n\n      return boardWidth / 8\n    }\n\n    // create random IDs for elements\n    function createElIds () {\n      // squares on the board\n      for (var i = 0; i < COLUMNS.length; i++) {\n        for (var j = 1; j <= 8; j++) {\n          var square = COLUMNS[i] + j\n          squareElsIds[square] = square + '-' + uuid()\n        }\n      }\n\n      // spare pieces\n      var pieces = 'KQRNBP'.split('')\n      for (i = 0; i < pieces.length; i++) {\n        var whitePiece = 'w' + pieces[i]\n        var blackPiece = 'b' + pieces[i]\n        sparePiecesElsIds[whitePiece] = whitePiece + '-' + uuid()\n        sparePiecesElsIds[blackPiece] = blackPiece + '-' + uuid()\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // Markup Building\n    // -------------------------------------------------------------------------\n\n    function buildBoardHTML (orientation) {\n      if (orientation !== 'black') {\n        orientation = 'white'\n      }\n\n      var html = ''\n\n      // algebraic notation / orientation\n      var alpha = deepCopy(COLUMNS)\n      var row = 8\n      if (orientation === 'black') {\n        alpha.reverse()\n        row = 1\n      }\n\n      var squareColor = 'white'\n      for (var i = 0; i < 8; i++) {\n        html += '<div class=\"{row}\">'\n        for (var j = 0; j < 8; j++) {\n          var square = alpha[j] + row\n\n          html += '<div class=\"{square} ' + CSS[squareColor] + ' ' +\n            'square-' + square + '\" ' +\n            'style=\"width:' + squareSize + 'px;height:' + squareSize + 'px;\" ' +\n            'id=\"' + squareElsIds[square] + '\" ' +\n            'data-square=\"' + square + '\">'\n\n          if (config.showNotation) {\n            // alpha notation\n            if ((orientation === 'white' && row === 1) ||\n                (orientation === 'black' && row === 8)) {\n              html += '<div class=\"{notation} {alpha}\">' + alpha[j] + '</div>'\n            }\n\n            // numeric notation\n            if (j === 0) {\n              html += '<div class=\"{notation} {numeric}\">' + row + '</div>'\n            }\n          }\n\n          html += '</div>' // end .square\n\n          squareColor = (squareColor === 'white') ? 'black' : 'white'\n        }\n        html += '<div class=\"{clearfix}\"></div></div>'\n\n        squareColor = (squareColor === 'white') ? 'black' : 'white'\n\n        if (orientation === 'white') {\n          row = row - 1\n        } else {\n          row = row + 1\n        }\n      }\n\n      return interpolateTemplate(html, CSS)\n    }\n\n    function buildPieceImgSrc (piece) {\n      if (isFunction(config.pieceTheme)) {\n        return config.pieceTheme(piece)\n      }\n\n      if (isString(config.pieceTheme)) {\n        return interpolateTemplate(config.pieceTheme, {piece: piece})\n      }\n\n      // NOTE: this should never happen\n      error(8272, 'Unable to build image source for config.pieceTheme.')\n      return ''\n    }\n\n    function buildPieceHTML (piece, hidden, id) {\n      var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" '\n      if (isString(id) && id !== '') {\n        html += 'id=\"' + id + '\" '\n      }\n      html += 'alt=\"\" ' +\n        'class=\"{piece}\" ' +\n        'data-piece=\"' + piece + '\" ' +\n        'style=\"width:' + squareSize + 'px;' + 'height:' + squareSize + 'px;'\n\n      if (hidden) {\n        html += 'display:none;'\n      }\n\n      html += '\" />'\n\n      return interpolateTemplate(html, CSS)\n    }\n\n    function buildSparePiecesHTML (color) {\n      var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP']\n      if (color === 'black') {\n        pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP']\n      }\n\n      var html = ''\n      for (var i = 0; i < pieces.length; i++) {\n        html += buildPieceHTML(pieces[i], false, sparePiecesElsIds[pieces[i]])\n      }\n\n      return html\n    }\n\n    // -------------------------------------------------------------------------\n    // Animations\n    // -------------------------------------------------------------------------\n\n    function animateSquareToSquare (src, dest, piece, completeFn) {\n      // get information about the source and destination squares\n      var $srcSquare = $('#' + squareElsIds[src])\n      var srcSquarePosition = $srcSquare.offset()\n      var $destSquare = $('#' + squareElsIds[dest])\n      var destSquarePosition = $destSquare.offset()\n\n      // create the animated piece and absolutely position it\n      // over the source square\n      var animatedPieceId = uuid()\n      $('body').append(buildPieceHTML(piece, true, animatedPieceId))\n      var $animatedPiece = $('#' + animatedPieceId)\n      $animatedPiece.css({\n        display: '',\n        position: 'absolute',\n        top: srcSquarePosition.top,\n        left: srcSquarePosition.left\n      })\n\n      // remove original piece from source square\n      $srcSquare.find('.' + CSS.piece).remove()\n\n      function onFinishAnimation1 () {\n        // add the \"real\" piece to the destination square\n        $destSquare.append(buildPieceHTML(piece))\n\n        // remove the animated piece\n        $animatedPiece.remove()\n\n        // run complete function\n        if (isFunction(completeFn)) {\n          completeFn()\n        }\n      }\n\n      // animate the piece to the destination square\n      var opts = {\n        duration: config.moveSpeed,\n        complete: onFinishAnimation1\n      }\n      $animatedPiece.animate(destSquarePosition, opts)\n    }\n\n    function animateSparePieceToSquare (piece, dest, completeFn) {\n      var srcOffset = $('#' + sparePiecesElsIds[piece]).offset()\n      var $destSquare = $('#' + squareElsIds[dest])\n      var destOffset = $destSquare.offset()\n\n      // create the animate piece\n      var pieceId = uuid()\n      $('body').append(buildPieceHTML(piece, true, pieceId))\n      var $animatedPiece = $('#' + pieceId)\n      $animatedPiece.css({\n        display: '',\n        position: 'absolute',\n        left: srcOffset.left,\n        top: srcOffset.top\n      })\n\n      // on complete\n      function onFinishAnimation2 () {\n        // add the \"real\" piece to the destination square\n        $destSquare.find('.' + CSS.piece).remove()\n        $destSquare.append(buildPieceHTML(piece))\n\n        // remove the animated piece\n        $animatedPiece.remove()\n\n        // run complete function\n        if (isFunction(completeFn)) {\n          completeFn()\n        }\n      }\n\n      // animate the piece to the destination square\n      var opts = {\n        duration: config.moveSpeed,\n        complete: onFinishAnimation2\n      }\n      $animatedPiece.animate(destOffset, opts)\n    }\n\n    // execute an array of animations\n    function doAnimations (animations, oldPos, newPos) {\n      if (animations.length === 0) return\n\n      var numFinished = 0\n      function onFinishAnimation3 () {\n        // exit if all the animations aren't finished\n        numFinished = numFinished + 1\n        if (numFinished !== animations.length) return\n\n        drawPositionInstant()\n\n        // run their onMoveEnd function\n        if (isFunction(config.onMoveEnd)) {\n          config.onMoveEnd(deepCopy(oldPos), deepCopy(newPos))\n        }\n      }\n\n      for (var i = 0; i < animations.length; i++) {\n        var animation = animations[i]\n\n        // clear a piece\n        if (animation.type === 'clear') {\n          $('#' + squareElsIds[animation.square] + ' .' + CSS.piece)\n            .fadeOut(config.trashSpeed, onFinishAnimation3)\n\n        // add a piece with no spare pieces - fade the piece onto the square\n        } else if (animation.type === 'add' && !config.sparePieces) {\n          $('#' + squareElsIds[animation.square])\n            .append(buildPieceHTML(animation.piece, true))\n            .find('.' + CSS.piece)\n            .fadeIn(config.appearSpeed, onFinishAnimation3)\n\n        // add a piece with spare pieces - animate from the spares\n        } else if (animation.type === 'add' && config.sparePieces) {\n          animateSparePieceToSquare(animation.piece, animation.square, onFinishAnimation3)\n\n        // move a piece from squareA to squareB\n        } else if (animation.type === 'move') {\n          animateSquareToSquare(animation.source, animation.destination, animation.piece, onFinishAnimation3)\n        }\n      }\n    }\n\n    // calculate an array of animations that need to happen in order to get\n    // from pos1 to pos2\n    function calculateAnimations (pos1, pos2) {\n      // make copies of both\n      pos1 = deepCopy(pos1)\n      pos2 = deepCopy(pos2)\n\n      var animations = []\n      var squaresMovedTo = {}\n\n      // remove pieces that are the same in both positions\n      for (var i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue\n\n        if (pos1.hasOwnProperty(i) && pos1[i] === pos2[i]) {\n          delete pos1[i]\n          delete pos2[i]\n        }\n      }\n\n      // find all the \"move\" animations\n      for (i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue\n\n        var closestPiece = findClosestPiece(pos1, pos2[i], i)\n        if (closestPiece) {\n          animations.push({\n            type: 'move',\n            source: closestPiece,\n            destination: i,\n            piece: pos2[i]\n          })\n\n          delete pos1[closestPiece]\n          delete pos2[i]\n          squaresMovedTo[i] = true\n        }\n      }\n\n      // \"add\" animations\n      for (i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue\n\n        animations.push({\n          type: 'add',\n          square: i,\n          piece: pos2[i]\n        })\n\n        delete pos2[i]\n      }\n\n      // \"clear\" animations\n      for (i in pos1) {\n        if (!pos1.hasOwnProperty(i)) continue\n\n        // do not clear a piece if it is on a square that is the result\n        // of a \"move\", ie: a piece capture\n        if (squaresMovedTo.hasOwnProperty(i)) continue\n\n        animations.push({\n          type: 'clear',\n          square: i,\n          piece: pos1[i]\n        })\n\n        delete pos1[i]\n      }\n\n      return animations\n    }\n\n    // -------------------------------------------------------------------------\n    // Control Flow\n    // -------------------------------------------------------------------------\n\n    function drawPositionInstant () {\n      // clear the board\n      $board.find('.' + CSS.piece).remove()\n\n      // add the pieces\n      for (var i in currentPosition) {\n        if (!currentPosition.hasOwnProperty(i)) continue\n\n        $('#' + squareElsIds[i]).append(buildPieceHTML(currentPosition[i]))\n      }\n    }\n\n    function drawBoard () {\n      $board.html(buildBoardHTML(currentOrientation, squareSize, config.showNotation))\n      drawPositionInstant()\n\n      if (config.sparePieces) {\n        if (currentOrientation === 'white') {\n          $sparePiecesTop.html(buildSparePiecesHTML('black'))\n          $sparePiecesBottom.html(buildSparePiecesHTML('white'))\n        } else {\n          $sparePiecesTop.html(buildSparePiecesHTML('white'))\n          $sparePiecesBottom.html(buildSparePiecesHTML('black'))\n        }\n      }\n    }\n\n    function setCurrentPosition (position) {\n      var oldPos = deepCopy(currentPosition)\n      var newPos = deepCopy(position)\n      var oldFen = objToFen(oldPos)\n      var newFen = objToFen(newPos)\n\n      // do nothing if no change in position\n      if (oldFen === newFen) return\n\n      // run their onChange function\n      if (isFunction(config.onChange)) {\n        config.onChange(oldPos, newPos)\n      }\n\n      // update state\n      currentPosition = position\n    }\n\n    function isXYOnSquare (x, y) {\n      for (var i in squareElsOffsets) {\n        if (!squareElsOffsets.hasOwnProperty(i)) continue\n\n        var s = squareElsOffsets[i]\n        if (x >= s.left &&\n            x < s.left + squareSize &&\n            y >= s.top &&\n            y < s.top + squareSize) {\n          return i\n        }\n      }\n\n      return 'offboard'\n    }\n\n    // records the XY coords of every square into memory\n    function captureSquareOffsets () {\n      squareElsOffsets = {}\n\n      for (var i in squareElsIds) {\n        if (!squareElsIds.hasOwnProperty(i)) continue\n\n        squareElsOffsets[i] = $('#' + squareElsIds[i]).offset()\n      }\n    }\n\n    function removeSquareHighlights () {\n      $board\n        .find('.' + CSS.square)\n        .removeClass(CSS.highlight1 + ' ' + CSS.highlight2)\n    }\n\n    function snapbackDraggedPiece () {\n      // there is no \"snapback\" for spare pieces\n      if (draggedPieceSource === 'spare') {\n        trashDraggedPiece()\n        return\n      }\n\n      removeSquareHighlights()\n\n      // animation complete\n      function complete () {\n        drawPositionInstant()\n        $draggedPiece.css('display', 'none')\n\n        // run their onSnapbackEnd function\n        if (isFunction(config.onSnapbackEnd)) {\n          config.onSnapbackEnd(\n            draggedPiece,\n            draggedPieceSource,\n            deepCopy(currentPosition),\n            currentOrientation\n          )\n        }\n      }\n\n      // get source square position\n      var sourceSquarePosition = $('#' + squareElsIds[draggedPieceSource]).offset()\n\n      // animate the piece to the target square\n      var opts = {\n        duration: config.snapbackSpeed,\n        complete: complete\n      }\n      $draggedPiece.animate(sourceSquarePosition, opts)\n\n      // set state\n      isDragging = false\n    }\n\n    function trashDraggedPiece () {\n      removeSquareHighlights()\n\n      // remove the source piece\n      var newPosition = deepCopy(currentPosition)\n      delete newPosition[draggedPieceSource]\n      setCurrentPosition(newPosition)\n\n      // redraw the position\n      drawPositionInstant()\n\n      // hide the dragged piece\n      $draggedPiece.fadeOut(config.trashSpeed)\n\n      // set state\n      isDragging = false\n    }\n\n    function dropDraggedPieceOnSquare (square) {\n      removeSquareHighlights()\n\n      // update position\n      var newPosition = deepCopy(currentPosition)\n      delete newPosition[draggedPieceSource]\n      newPosition[square] = draggedPiece\n      setCurrentPosition(newPosition)\n\n      // get target square information\n      var targetSquarePosition = $('#' + squareElsIds[square]).offset()\n\n      // animation complete\n      function onAnimationComplete () {\n        drawPositionInstant()\n        $draggedPiece.css('display', 'none')\n\n        // execute their onSnapEnd function\n        if (isFunction(config.onSnapEnd)) {\n          config.onSnapEnd(draggedPieceSource, square, draggedPiece)\n        }\n      }\n\n      // snap the piece to the target square\n      var opts = {\n        duration: config.snapSpeed,\n        complete: onAnimationComplete\n      }\n      $draggedPiece.animate(targetSquarePosition, opts)\n\n      // set state\n      isDragging = false\n    }\n\n    function beginDraggingPiece (source, piece, x, y) {\n      // run their custom onDragStart function\n      // their custom onDragStart function can cancel drag start\n      if (isFunction(config.onDragStart) &&\n          config.onDragStart(source, piece, deepCopy(currentPosition), currentOrientation) === false) {\n        return\n      }\n\n      // set state\n      isDragging = true\n      draggedPiece = piece\n      draggedPieceSource = source\n\n      // if the piece came from spare pieces, location is offboard\n      if (source === 'spare') {\n        draggedPieceLocation = 'offboard'\n      } else {\n        draggedPieceLocation = source\n      }\n\n      // capture the x, y coords of all squares in memory\n      captureSquareOffsets()\n\n      // create the dragged piece\n      $draggedPiece.attr('src', buildPieceImgSrc(piece)).css({\n        display: '',\n        position: 'absolute',\n        left: x - squareSize / 2,\n        top: y - squareSize / 2\n      })\n\n      if (source !== 'spare') {\n        // highlight the source square and hide the piece\n        $('#' + squareElsIds[source])\n          .addClass(CSS.highlight1)\n          .find('.' + CSS.piece)\n          .css('display', 'none')\n      }\n    }\n\n    function updateDraggedPiece (x, y) {\n      // put the dragged piece over the mouse cursor\n      $draggedPiece.css({\n        left: x - squareSize / 2,\n        top: y - squareSize / 2\n      })\n\n      // get location\n      var location = isXYOnSquare(x, y)\n\n      // do nothing if the location has not changed\n      if (location === draggedPieceLocation) return\n\n      // remove highlight from previous square\n      if (validSquare(draggedPieceLocation)) {\n        $('#' + squareElsIds[draggedPieceLocation]).removeClass(CSS.highlight2)\n      }\n\n      // add highlight to new square\n      if (validSquare(location)) {\n        $('#' + squareElsIds[location]).addClass(CSS.highlight2)\n      }\n\n      // run onDragMove\n      if (isFunction(config.onDragMove)) {\n        config.onDragMove(\n          location,\n          draggedPieceLocation,\n          draggedPieceSource,\n          draggedPiece,\n          deepCopy(currentPosition),\n          currentOrientation\n        )\n      }\n\n      // update state\n      draggedPieceLocation = location\n    }\n\n    function stopDraggedPiece (location) {\n      // determine what the action should be\n      var action = 'drop'\n      if (location === 'offboard' && config.dropOffBoard === 'snapback') {\n        action = 'snapback'\n      }\n      if (location === 'offboard' && config.dropOffBoard === 'trash') {\n        action = 'trash'\n      }\n\n      // run their onDrop function, which can potentially change the drop action\n      if (isFunction(config.onDrop)) {\n        var newPosition = deepCopy(currentPosition)\n\n        // source piece is a spare piece and position is off the board\n        // if (draggedPieceSource === 'spare' && location === 'offboard') {...}\n        // position has not changed; do nothing\n\n        // source piece is a spare piece and position is on the board\n        if (draggedPieceSource === 'spare' && validSquare(location)) {\n          // add the piece to the board\n          newPosition[location] = draggedPiece\n        }\n\n        // source piece was on the board and position is off the board\n        if (validSquare(draggedPieceSource) && location === 'offboard') {\n          // remove the piece from the board\n          delete newPosition[draggedPieceSource]\n        }\n\n        // source piece was on the board and position is on the board\n        if (validSquare(draggedPieceSource) && validSquare(location)) {\n          // move the piece\n          delete newPosition[draggedPieceSource]\n          newPosition[location] = draggedPiece\n        }\n\n        var oldPosition = deepCopy(currentPosition)\n\n        var result = config.onDrop(\n          draggedPieceSource,\n          location,\n          draggedPiece,\n          newPosition,\n          oldPosition,\n          currentOrientation\n        )\n        if (result === 'snapback' || result === 'trash') {\n          action = result\n        }\n      }\n\n      // do it!\n      if (action === 'snapback') {\n        snapbackDraggedPiece()\n      } else if (action === 'trash') {\n        trashDraggedPiece()\n      } else if (action === 'drop') {\n        dropDraggedPieceOnSquare(location)\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    // clear the board\n    widget.clear = function (useAnimation) {\n      widget.position({}, useAnimation)\n    }\n\n    // remove the widget from the page\n    widget.destroy = function () {\n      // remove markup\n      $container.html('')\n      $draggedPiece.remove()\n\n      // remove event handlers\n      $container.unbind()\n    }\n\n    // shorthand method to get the current FEN\n    widget.fen = function () {\n      return widget.position('fen')\n    }\n\n    // flip orientation\n    widget.flip = function () {\n      return widget.orientation('flip')\n    }\n\n    // move pieces\n    // TODO: this method should be variadic as well as accept an array of moves\n    widget.move = function () {\n      // no need to throw an error here; just do nothing\n      // TODO: this should return the current position\n      if (arguments.length === 0) return\n\n      var useAnimation = true\n\n      // collect the moves into an object\n      var moves = {}\n      for (var i = 0; i < arguments.length; i++) {\n        // any \"false\" to this function means no animations\n        if (arguments[i] === false) {\n          useAnimation = false\n          continue\n        }\n\n        // skip invalid arguments\n        if (!validMove(arguments[i])) {\n          error(2826, 'Invalid move passed to the move method.', arguments[i])\n          continue\n        }\n\n        var tmp = arguments[i].split('-')\n        moves[tmp[0]] = tmp[1]\n      }\n\n      // calculate position from moves\n      var newPos = calculatePositionFromMoves(currentPosition, moves)\n\n      // update the board\n      widget.position(newPos, useAnimation)\n\n      // return the new position object\n      return newPos\n    }\n\n    widget.orientation = function (arg) {\n      // no arguments, return the current orientation\n      if (arguments.length === 0) {\n        return currentOrientation\n      }\n\n      // set to white or black\n      if (arg === 'white' || arg === 'black') {\n        currentOrientation = arg\n        drawBoard()\n        return currentOrientation\n      }\n\n      // flip orientation\n      if (arg === 'flip') {\n        currentOrientation = currentOrientation === 'white' ? 'black' : 'white'\n        drawBoard()\n        return currentOrientation\n      }\n\n      error(5482, 'Invalid value passed to the orientation method.', arg)\n    }\n\n    widget.position = function (position, useAnimation) {\n      // no arguments, return the current position\n      if (arguments.length === 0) {\n        return deepCopy(currentPosition)\n      }\n\n      // get position as FEN\n      if (isString(position) && position.toLowerCase() === 'fen') {\n        return objToFen(currentPosition)\n      }\n\n      // start position\n      if (isString(position) && position.toLowerCase() === 'start') {\n        position = deepCopy(START_POSITION)\n      }\n\n      // convert FEN to position object\n      if (validFen(position)) {\n        position = fenToObj(position)\n      }\n\n      // validate position object\n      if (!validPositionObject(position)) {\n        error(6482, 'Invalid value passed to the position method.', position)\n        return\n      }\n\n      // default for useAnimations is true\n      if (useAnimation !== false) useAnimation = true\n\n      if (useAnimation) {\n        // start the animations\n        var animations = calculateAnimations(currentPosition, position)\n        doAnimations(animations, currentPosition, position)\n\n        // set the new position\n        setCurrentPosition(position)\n      } else {\n        // instant update\n        setCurrentPosition(position)\n        drawPositionInstant()\n      }\n    }\n\n    widget.resize = function () {\n      // calulate the new square size\n      squareSize = calculateSquareSize()\n\n      // set board width\n      $board.css('width', squareSize * 8 + 'px')\n\n      // set drag piece size\n      $draggedPiece.css({\n        height: squareSize,\n        width: squareSize\n      })\n\n      // spare pieces\n      if (config.sparePieces) {\n        $container\n          .find('.' + CSS.sparePieces)\n          .css('paddingLeft', squareSize + boardBorderSize + 'px')\n      }\n\n      // redraw the board\n      drawBoard()\n    }\n\n    // set the starting position\n    widget.start = function (useAnimation) {\n      widget.position('start', useAnimation)\n    }\n\n    // -------------------------------------------------------------------------\n    // Browser Events\n    // -------------------------------------------------------------------------\n\n    function stopDefault (evt) {\n      evt.preventDefault()\n    }\n\n    function mousedownSquare (evt) {\n      // do nothing if we're not draggable\n      if (!config.draggable) return\n\n      // do nothing if there is no piece on this square\n      var square = $(this).attr('data-square')\n      if (!validSquare(square)) return\n      if (!currentPosition.hasOwnProperty(square)) return\n\n      beginDraggingPiece(square, currentPosition[square], evt.pageX, evt.pageY)\n    }\n\n    function touchstartSquare (e) {\n      // do nothing if we're not draggable\n      if (!config.draggable) return\n\n      // do nothing if there is no piece on this square\n      var square = $(this).attr('data-square')\n      if (!validSquare(square)) return\n      if (!currentPosition.hasOwnProperty(square)) return\n\n      e = e.originalEvent\n      beginDraggingPiece(\n        square,\n        currentPosition[square],\n        e.changedTouches[0].pageX,\n        e.changedTouches[0].pageY\n      )\n    }\n\n    function mousedownSparePiece (evt) {\n      // do nothing if sparePieces is not enabled\n      if (!config.sparePieces) return\n\n      var piece = $(this).attr('data-piece')\n\n      beginDraggingPiece('spare', piece, evt.pageX, evt.pageY)\n    }\n\n    function touchstartSparePiece (e) {\n      // do nothing if sparePieces is not enabled\n      if (!config.sparePieces) return\n\n      var piece = $(this).attr('data-piece')\n\n      e = e.originalEvent\n      beginDraggingPiece(\n        'spare',\n        piece,\n        e.changedTouches[0].pageX,\n        e.changedTouches[0].pageY\n      )\n    }\n\n    function mousemoveWindow (evt) {\n      if (isDragging) {\n        updateDraggedPiece(evt.pageX, evt.pageY)\n      }\n    }\n\n    var throttledMousemoveWindow = throttle(mousemoveWindow, config.dragThrottleRate)\n\n    function touchmoveWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\n      // prevent screen from scrolling\n      evt.preventDefault()\n\n      updateDraggedPiece(evt.originalEvent.changedTouches[0].pageX,\n        evt.originalEvent.changedTouches[0].pageY)\n    }\n\n    var throttledTouchmoveWindow = throttle(touchmoveWindow, config.dragThrottleRate)\n\n    function mouseupWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\n      // get the location\n      var location = isXYOnSquare(evt.pageX, evt.pageY)\n\n      stopDraggedPiece(location)\n    }\n\n    function touchendWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\n      // get the location\n      var location = isXYOnSquare(evt.originalEvent.changedTouches[0].pageX,\n        evt.originalEvent.changedTouches[0].pageY)\n\n      stopDraggedPiece(location)\n    }\n\n    function mouseenterSquare (evt) {\n      // do not fire this event if we are dragging a piece\n      // NOTE: this should never happen, but it's a safeguard\n      if (isDragging) return\n\n      // exit if they did not provide a onMouseoverSquare function\n      if (!isFunction(config.onMouseoverSquare)) return\n\n      // get the square\n      var square = $(evt.currentTarget).attr('data-square')\n\n      // NOTE: this should never happen; defensive\n      if (!validSquare(square)) return\n\n      // get the piece on this square\n      var piece = false\n      if (currentPosition.hasOwnProperty(square)) {\n        piece = currentPosition[square]\n      }\n\n      // execute their function\n      config.onMouseoverSquare(square, piece, deepCopy(currentPosition), currentOrientation)\n    }\n\n    function mouseleaveSquare (evt) {\n      // do not fire this event if we are dragging a piece\n      // NOTE: this should never happen, but it's a safeguard\n      if (isDragging) return\n\n      // exit if they did not provide an onMouseoutSquare function\n      if (!isFunction(config.onMouseoutSquare)) return\n\n      // get the square\n      var square = $(evt.currentTarget).attr('data-square')\n\n      // NOTE: this should never happen; defensive\n      if (!validSquare(square)) return\n\n      // get the piece on this square\n      var piece = false\n      if (currentPosition.hasOwnProperty(square)) {\n        piece = currentPosition[square]\n      }\n\n      // execute their function\n      config.onMouseoutSquare(square, piece, deepCopy(currentPosition), currentOrientation)\n    }\n\n    // -------------------------------------------------------------------------\n    // Initialization\n    // -------------------------------------------------------------------------\n\n    function addEvents () {\n      // prevent \"image drag\"\n      $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault)\n\n      // mouse drag pieces\n      $board.on('mousedown', '.' + CSS.square, mousedownSquare)\n      $container.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece, mousedownSparePiece)\n\n      // mouse enter / leave square\n      $board\n        .on('mouseenter', '.' + CSS.square, mouseenterSquare)\n        .on('mouseleave', '.' + CSS.square, mouseleaveSquare)\n\n      // piece drag\n      var $window = $(window)\n      $window\n        .on('mousemove', throttledMousemoveWindow)\n        .on('mouseup', mouseupWindow)\n\n      // touch drag pieces\n      if (isTouchDevice()) {\n        $board.on('touchstart', '.' + CSS.square, touchstartSquare)\n        $container.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece, touchstartSparePiece)\n        $window\n          .on('touchmove', throttledTouchmoveWindow)\n          .on('touchend', touchendWindow)\n      }\n    }\n\n    function initDOM () {\n      // create unique IDs for all the elements we will create\n      createElIds()\n\n      // build board and save it in memory\n      $container.html(buildContainerHTML(config.sparePieces))\n      $board = $container.find('.' + CSS.board)\n\n      if (config.sparePieces) {\n        $sparePiecesTop = $container.find('.' + CSS.sparePiecesTop)\n        $sparePiecesBottom = $container.find('.' + CSS.sparePiecesBottom)\n      }\n\n      // create the drag piece\n      var draggedPieceId = uuid()\n      $('body').append(buildPieceHTML('wP', true, draggedPieceId))\n      $draggedPiece = $('#' + draggedPieceId)\n\n      // TODO: need to remove this dragged piece element if the board is no\n      // longer in the DOM\n\n      // get the border size\n      boardBorderSize = parseInt($board.css('borderLeftWidth'), 10)\n\n      // set the size and draw the board\n      widget.resize()\n    }\n\n    // -------------------------------------------------------------------------\n    // Initialization\n    // -------------------------------------------------------------------------\n\n    setInitialState()\n    initDOM()\n    addEvents()\n\n    // return the widget object\n    return widget\n  } // end constructor\n  \n\n  // TODO: do module exports here\n  // window['Chessboard'] = constructor\n\n  // // support legacy ChessBoard name\n  // window['ChessBoard'] = window['Chessboard']\n\n  // // expose util functions\n  // window['Chessboard']['fenToObj'] = fenToObj\n  // window['Chessboard']['objToFen'] = objToFen\n  return constructor\n\n} // end anonymous wrapper\n\nexport default ChessBoard()"],"sourceRoot":""}