{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/OnlineGame/index.js","containers/OnlineGamePage/index.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","$","window","jQuery","unsubscribe","board","OnlineGame","boardType","piece","user","updateMoves","mode","updateStatusText","changeSite","updateLocalStorage","props","useState","Chess","gameEngine","token","match","params","state","setState","songRef","useRef","isGameEndByTime","setIsGameEndByTime","useEffect","timer","isGameActive","setInterval","setTimeLeft","timeLeft","whiteTime","blackTime","clearInterval","cb","id","game","engine","playerNum","figurePlayer","load","fen","isMyTurn","turn","position","config","pieceTheme","process","draggable","onDragStart","square","makeDots","addClass","game_over","allowMove","onDrop","removeClass","removeDotSquares","move","from","to","promotion","chessRef","firestore","collection","doc","update","whiteSan","san","blackSan","onSnapEnd","current","play","onMouseoutSquare","onMouseoverSquare","Chessboard","orientation","$board","squares","resize","initBoard","updateBoard","p1_token","p2_token","moveIndex","prevState","statusText","in_draw","in_check","in_checkmate","in_threefold_repetition","insufficient_material","in_stalemate","updateState","forEach","name","where","onSnapshot","querySnapshot","size","docs","map","data","generateID","firebase","FieldValue","increment","EndGameCard","Game","links","userName","points","isGameEnded","propTypesd","PropTypes","string","shape","photo","uid","number","func","isRequired","withRouter","mapDispatchToProps","boardActions","loginUserWithSocials","userActions","loginUserWithForm","connect","boardInfo","moves","history","useAuthState","auth","authUser","className","push","ScoreBoard","isOnline"],"mappings":"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","file":"static/js/10.faa2f3ec.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Chess from 'chess.js/chess';\nimport Chessboard from '@chrisoakman/chessboardjs/dist/chessboard-1.0.0';\nimport { withRouter } from 'react-router-dom';\nimport Game from '../common/Game';\nimport EndGameCard from '../EndGameCard';\nimport firebase, { firestore } from '../../firebase-config';\nimport { figurePlayer, setTimeLeft } from '../utils/gameUtils/onlineGameUtils';\nimport {\n  removeDotSquares,\n  allowMove,\n  makeDots,\n  statusText,\n  isMyTurn,\n} from '../utils/gameUtils/commonGameUtils';\nimport { generateID } from '../utils';\n\nconst $ = window.jQuery;\n\nconst INITIAL_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\nlet unsubscribe = null;\nlet board = null;\n\nconst OnlineGame = ({\n  boardType,\n  piece,\n  user,\n  mode,\n  updateMoves,\n  updateStatusText,\n  changeSite,\n  updateLocalStorage,\n  ...props\n}) => {\n  const [gameEngine] = useState(new Chess());\n  const [state, setState] = useState({\n    token: props.match.params.token,\n  });\n  const songRef = useRef(null);\n\n  const [isGameEndByTime, setIsGameEndByTime] = useState(false);\n\n  useEffect(() => {\n    let timer = null;\n    if (state.isGameActive) {\n      timer = setInterval(() => {\n        setTimeLeft(state, gameEngine);\n      }, 1000);\n    }\n    if (state.timeLeft?.whiteTime <= 0 || state.timeLeft?.blackTime <= 0) {\n      clearInterval(timer);\n      setIsGameEndByTime(true);\n    }\n    return () => clearInterval(timer);\n  }, [state.isGameActive, state.timeLeft]);\n\n  useEffect(() => {\n    ListenForUpdates(state.token, (id, game) => {\n      updateBoard(id, game);\n      updateState(id, game);\n    });\n\n    return () => unsubscribe && unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    updateStatusText(state.statusText);\n  }, [state.statusText]);\n\n  useEffect(() => {\n    const { whiteSan, blackSan } = state;\n    if (whiteSan || blackSan) {\n      updateMoves({\n        whiteSan,\n        blackSan,\n        id: generateID(5),\n        moveIndex: state.moveIndex ?? 1,\n      });\n    }\n    const chessRef = firestore.collection('games').doc(state.id);\n    if (state.whiteSan && state.blackSan) {\n      chessRef.update({\n        whiteSan: '',\n        blackSan: '',\n        moveIndex: firebase.firestore.FieldValue.increment(1),\n        // moveIndex: state.moveIndex + 1,\n      });\n    }\n  }, [state.whiteSan, state.blackSan]);\n\n  function updateState(\n    id,\n    {\n      p1_token,\n      p2_token,\n      whiteSan,\n      blackSan,\n      timeLeft,\n      moveIndex,\n      isGameActive,\n    }\n  ) {\n    const playerNum = figurePlayer(state.token, { p1_token, p2_token });\n    setState((prevState) => ({\n      ...prevState,\n      isGameActive,\n      timeLeft,\n      id,\n      moveIndex,\n      p1_token,\n      p2_token,\n      whiteSan,\n      blackSan,\n      statusText: statusText(\n        gameEngine.turn(),\n        playerNum,\n        isMyTurn(playerNum, gameEngine.turn()),\n        gameEngine.in_draw(),\n        gameEngine.in_check(),\n        gameEngine.in_checkmate(),\n        gameEngine.in_threefold_repetition(),\n        gameEngine.insufficient_material(),\n        gameEngine.in_stalemate()\n      ),\n    }));\n  }\n\n  function updateBoard(id, game) {\n    const engine = gameEngine;\n    const playerNum = figurePlayer(state.token, game);\n    engine.load(game.fen || INITIAL_FEN);\n\n    if (!board) {\n      board = initBoard(id, game);\n      board.position(engine.fen());\n    } else if (isMyTurn(playerNum, engine.turn())) {\n      board.position(engine.fen());\n    }\n  }\n  function initBoard(id, game) {\n    const engine = gameEngine;\n    const playerNum = figurePlayer(state.token, game);\n    const config = {\n      pieceTheme: `${process.env.PUBLIC_URL}/img/chesspieces/${piece}/{piece}.png`,\n      draggable: true,\n      position: 'start',\n      onDragStart,\n      onDrop,\n      onSnapEnd,\n      onMouseoutSquare: removeDotSquares,\n      onMouseoverSquare,\n    };\n\n    board = Chessboard('board', config);\n    if (playerNum === 2) {\n      board.orientation('black');\n    }\n\n    const $board = $('.chessboard-63f37');\n    const squares = $('.square-55d63');\n\n    if (boardType === 'wooden') {\n      $board.addClass('woodenBoard');\n      squares.addClass('transparent');\n    } else if (board === 'classic') {\n      $board.removeClass('woodenBoard');\n      squares.removeClass('transparent');\n    }\n\n    $(window).resize(board.resize);\n\n    return board;\n\n    function onMouseoverSquare(square) {\n      const canIMove = isMyTurn(playerNum, engine.turn());\n\n      if (canIMove) {\n        makeDots(gameEngine, square);\n      }\n    }\n\n    function onDragStart(square, piece) {\n      makeDots(gameEngine, square);\n      const img = $(`img[data-piece=\"${piece}\"]`);\n      img.addClass('z-index');\n      return (\n        !engine.game_over() &&\n        isMyTurn(playerNum, engine.turn()) &&\n        allowMove(engine.turn(), piece)\n      );\n    }\n\n    function onDrop(source, target, piece) {\n      const img = $(`img[data-piece=\"${piece}\"]`);\n      img.removeClass('z-index');\n      removeDotSquares();\n      const move = gameEngine.move({\n        from: source,\n        to: target,\n        promotion: 'q',\n      });\n      if (move === null) return 'snapback';\n      const chessRef = firestore.collection('games').doc(id);\n      if (playerNum === 1) {\n        chessRef.update({\n          fen: engine.fen(),\n          whiteSan: move.san,\n          isGameActive: true,\n        });\n      } else if (playerNum === 2) {\n        chessRef.update({\n          fen: engine.fen(),\n          blackSan: move.san,\n        });\n      }\n    }\n    function onSnapEnd() {\n      songRef.current.play();\n      return board.position(engine.fen());\n    }\n  }\n  function ListenForUpdates(token, cb) {\n    ['p1_token', 'p2_token'].forEach((name) => {\n      const chessRef = firestore.collection('games').where(name, '==', token);\n      unsubscribe = chessRef.onSnapshot((querySnapshot) => {\n        if (querySnapshot.size) {\n          const [data] = querySnapshot.docs.map((doc) => {\n            return {\n              data: doc.data(),\n              id: doc.id,\n            };\n          });\n          cb(data.id, data.data);\n        }\n      });\n    });\n  }\n  return (\n    <>\n      {(gameEngine.game_over() || isGameEndByTime) && (\n        <EndGameCard\n          timeLeft={state.timeLeft}\n          turn={gameEngine.turn()}\n          user={user}\n        />\n      )}\n\n      <Game\n        timeLeft={state.timeLeft}\n        links\n        songRef={songRef}\n        p1_token={state.p1_token}\n        p2_token={state.p2_token}\n        userName={user?.userName}\n        points={user?.points}\n        playerNum={figurePlayer(state.token, state)}\n        isGameEnded={gameEngine.game_over() || isGameEndByTime}\n        changeSite={changeSite}\n        updateLocalStorage={updateLocalStorage}\n        token={state.token}\n      />\n    </>\n  );\n};\n\nOnlineGame.propTypesd = {\n  board: PropTypes.string,\n  piece: PropTypes.string,\n  token: PropTypes.string,\n  user: PropTypes.shape({\n    userName: PropTypes.string,\n    photo: PropTypes.string,\n    uid: PropTypes.string,\n    points: PropTypes.number,\n  }),\n  updateMoves: PropTypes.func.isRequired,\n  updateStatusText: PropTypes.func.isRequired,\n  changeSite: PropTypes.func.isRequired,\n  updateLocalStorage: PropTypes.func.isRequired,\n};\n\nexport default withRouter(OnlineGame);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport OnlineGame from '../../components/OnlineGame';\nimport ScoreBoard from '../../components/ScoreBoard';\nimport * as boardActions from '../../redux/actions/boardActions';\nimport * as userActions from '../../redux/actions/userActions';\nimport { auth } from '../../firebase-config';\n\nconst OnlineGamePage = ({\n  user,\n  moves,\n  statusText,\n  piece,\n  boardType,\n  mode,\n  history,\n  updateMoves,\n  updateStatusText,\n  loginUserWithSocials,\n  loginUserWithForm,\n  updateLocalStorage,\n}) => {\n  const [authUser] = useAuthState(auth);\n  useEffect(() => {\n    if (authUser !== null && user === null) {\n      loginUserWithSocials(authUser);\n    }\n    if (authUser === null && user === null) {\n      loginUserWithForm();\n    }\n  }, [authUser]);\n  return (\n    <>\n      <div className=\"page__wrapper\">\n        <OnlineGame\n          changeSite={history.push}\n          user={user}\n          piece={piece}\n          boardType={boardType}\n          updateMoves={updateMoves}\n          updateStatusText={updateStatusText}\n          updateLocalStorage={updateLocalStorage}\n          userName={user?.userName}\n          points={user?.points}\n          mode={mode}\n        />\n        <ScoreBoard isOnline moves={moves} statusText={statusText} />\n      </div>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n  const { moves, statusText, piece, board, mode } = state.boardInfo;\n  const { user } = state;\n  return {\n    moves,\n    statusText,\n    piece,\n    mode,\n    boardType: board,\n    user,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateMoves: boardActions.updateMoves,\n  updateStatusText: boardActions.updateStatusText,\n  loginUserWithSocials: userActions.loginUserWithSocials,\n  loginUserWithForm: userActions.loginUserWithForm,\n  updateLocalStorage: userActions.updateLocalStorage,\n};\n\nOnlineGamePage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  boardType: PropTypes.string.isRequired,\n  piece: PropTypes.string.isRequired,\n  mode: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    userName: PropTypes.string,\n    photo: PropTypes.string,\n    uid: PropTypes.string,\n    points: PropTypes.number,\n  }),\n  moves: PropTypes.arrayOf(\n    PropTypes.shape({\n      whiteSan: PropTypes.string,\n      blackSan: PropTypes.string,\n      index: PropTypes.number,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  statusText: PropTypes.string,\n  updateMoves: PropTypes.func.isRequired,\n  updateStatusText: PropTypes.func.isRequired,\n  loginUserWithSocials: PropTypes.func.isRequired,\n  loginUserWithForm: PropTypes.func.isRequired,\n  updateLocalStorage: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnlineGamePage);\n"],"sourceRoot":""}